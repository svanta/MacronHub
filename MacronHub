--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v91=v5(v81,v19);v19=nil;return v91;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(928 -(214 + 713))) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v82-(v82%((2515 -(1523 + 114)) -(282 + 595))) ;else local v83=2^(v32-1) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (931 -(857 + 74)) ;end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(1066 -(68 + 997))) then return v35;end if (v34==(1270 -(226 + (1161 -(32 + 85))))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=4 -3 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + 2 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + (6 -2) ;return (v41 * 16777216) + (v40 * (120312 -54776)) + (v39 * 256) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1;local v45=(v20(v43,351 -(87 + 263) ,200 -(67 + (904 -(368 + 423))) ) * (2^32)) + v42 ;local v46=v20(v43,16 + 5 ,75 -44 );local v47=((v20(v43,24 + 8 )==((9 -6) -(20 -(10 + 8)))) and  -(953 -((3084 -2282) + 150))) or ((444 -(416 + 26)) -1) ;if (v46==(0 -0)) then if (v45==(0 + 0)) then return v47 * (0 -0) ;else local v92=997 -(393 + 522 + 82) ;while true do if (v92==(0 -0)) then v46=(1 -0) + 0 ;v44=0 -0 ;break;end end end elseif (v46==(3234 -(1069 + 118))) then return ((v45==((438 -(145 + 293)) -0)) and (v47 * (1/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(178 + 845) ) * (v44 + (v45/((3 -1)^(52 + 0)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(1486 -(998 + 488))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(431 -(44 + 386)) );v18=v18 + v48 ;local v50={};for v64=1 + 0 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 1767 -(308 + 1459) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v51== #"!") then local v87=(function() return 0;end)();local v88=(function() return;end)();while true do if (v87~=(0 -0)) then else v88=(function() return 0 -0 ;end)();while true do if (v88==2) then v51=(function() return 2;end)();break;end if (v88==0) then v56=(function() return v23();end)();v57=(function() return {};end)();v88=(function() return 1;end)();end if (1==v88) then for v105= #" ",v56 do local v106=(function() return 0 -0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==1) then v109=(function() return nil;end)();while true do if (v107== #"!") then if (v108== #"!") then v109=(function() return v21()~=(867 -(550 + 317)) ;end)();elseif (v108==(2 -0)) then v109=(function() return v24();end)();elseif (v108~= #"xnx") then else v109=(function() return v25();end)();end v57[v105]=(function() return v109;end)();break;end if (v107~=(0 -0)) then else local v245=(function() return 0 -0 ;end)();while true do if (v245~=(285 -(134 + 151))) then else v108=(function() return v21();end)();v109=(function() return nil;end)();v245=(function() return 1666 -(970 + 695) ;end)();end if (v245~=1) then else v107=(function() return  #":";end)();break;end end end end break;end if (v106==(0 -0)) then local v146=(function() return 0;end)();local v147=(function() return;end)();while true do if (v146~=(1990 -(582 + 1408))) then else v147=(function() return 0;end)();while true do if (v147==1) then v106=(function() return 3 -2 ;end)();break;end if (v147==(0 -0)) then v107=(function() return 0 -0 ;end)();v108=(function() return nil;end)();v147=(function() return 1825 -(1195 + 629) ;end)();end end break;end end end end end v55[ #"91("]=(function() return v21();end)();v88=(function() return 2 -0 ;end)();end end break;end end end if ((243 -(187 + 54))==v51) then for v93= #"}",v23() do local v94=(function() return 0;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v94==1) then while true do if (v95==(780 -(162 + 618))) then v96=(function() return v21();end)();if (v20(v96, #">", #"]")~=(0 + 0)) then else local v110=(function() return 0;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110==3) then if (v20(v112, #"xnx", #"91(")== #"!") then v113[ #"?id="]=(function() return v57[v113[ #".dev"]];end)();end v52[v93]=(function() return v113;end)();break;end if ((1 + 0)~=v110) then else local v220=(function() return 0 -0 ;end)();local v221=(function() return;end)();while true do if (0==v220) then v221=(function() return 0 -0 ;end)();while true do if (v221==0) then v113=(function() return {v22(),v22(),nil,nil};end)();if (v111==(0 + 0)) then local v284=(function() return 0;end)();local v285=(function() return;end)();while true do if ((1636 -(1373 + 263))~=v284) then else v285=(function() return 0;end)();while true do if (0==v285) then v113[ #"-19"]=(function() return v22();end)();v113[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v111== #"\\") then v113[ #"asd"]=(function() return v23();end)();elseif (v111==2) then v113[ #"19("]=(function() return v23() -(2^16) ;end)();elseif (v111~= #"asd") then else local v290=(function() return 1000 -(451 + 549) ;end)();local v291=(function() return;end)();while true do if ((0 + 0)==v290) then v291=(function() return 0;end)();while true do if (v291~=0) then else v113[ #"xxx"]=(function() return v23() -(2^(24 -8)) ;end)();v113[ #"0313"]=(function() return v22();end)();break;end end break;end end end v221=(function() return 1 -0 ;end)();end if (1==v221) then v110=(function() return 1386 -(746 + 638) ;end)();break;end end break;end end end if (v110==(0 + 0)) then local v222=(function() return 0;end)();while true do if (0==v222) then v111=(function() return v20(v96,2 -0 , #"91(");end)();v112=(function() return v20(v96, #"?id=",6);end)();v222=(function() return 342 -(218 + 123) ;end)();end if (1~=v222) then else v110=(function() return 1582 -(1535 + 46) ;end)();break;end end end if (v110==2) then if (v20(v112, #"[", #"!")== #"[") then v113[2]=(function() return v57[v113[2 + 0 ]];end)();end if (v20(v112,2,2)~= #"\\") then else v113[ #"xxx"]=(function() return v57[v113[ #"-19"]];end)();end v110=(function() return 1 + 2 ;end)();end end end break;end end break;end if (v94==(560 -(306 + 254))) then local v103=(function() return 0;end)();while true do if (v103~=(1 + 0)) then else v94=(function() return 1;end)();break;end if (v103==0) then v95=(function() return 0 -0 ;end)();v96=(function() return nil;end)();v103=(function() return 1;end)();end end end end end for v97= #"}",v23() do v53[v97-#"~" ]=(function() return v28();end)();end return v55;end if (v51==0) then local v89=(function() return 1467 -(899 + 568) ;end)();local v90=(function() return;end)();while true do if (v89~=(0 + 0)) then else v90=(function() return 0;end)();while true do if (0~=v90) then else v52=(function() return {};end)();v53=(function() return {};end)();v90=(function() return 2 -1 ;end)();end if (v90==(605 -(268 + 335))) then v51=(function() return  #">";end)();break;end if (v90==(291 -(60 + 230))) then v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v90=(function() return 2;end)();end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1 + 0 ];local v62=v58[1458 -(282 + 1174) ];local v63=v58[814 -(569 + 242) ];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=2 -1 ;local v71= -(1 + 0);local v72={};local v73={...};local v74=v12("#",...) -(1252 -(721 + 530)) ;local v75={};local v76={};for v84=1271 -(945 + 326) ,v74 do if ((v84>=v68) or (1065<90)) then v72[v84-v68 ]=v73[v84 + (1 -0) ];else v76[v84]=v73[v84 + (2 -1) ];end end local v77=(v74-v68) + 1 + 0 ;local v78;local v79;while true do v78=v66[v70];v79=v78[701 -(271 + 429) ];if (v79<=(23 + 1)) then if (v79<=(1511 -(1408 + 92))) then if (v79<=(1091 -(461 + 625))) then if (v79<=(1290 -(993 + 295))) then if ((4802==4802) and (v79<=0)) then local v114=v78[1 + (3 -2) ];local v115=v78[1175 -(418 + (2172 -1419)) ];local v116=v114 + 1 + 1 ;local v117={v76[v114](v76[v114 + 1 + 0 ],v76[v116])};for v148=1791 -(573 + 1217) ,v115 do v76[v116 + v148 ]=v117[v148];end local v118=v117[1 + 0 ];if v118 then local v154=0;while true do if ((529 -(406 + 123))==v154) then v76[v116]=v118;v70=v78[1772 -(1749 + 20) ];break;end end else v70=v70 + 1 + 0 ;end elseif (v79>(1323 -(1249 + 73))) then v76[v78[(163 -(91 + 67)) -3 ]]={};else local v156=0 + 0 ;local v157;while true do if (v156==(0 + 0)) then v157=v78[1147 -(466 + 679) ];v76[v157](v13(v76,v157 + (2 -1) ,v78[8 -5 ]));break;end end end elseif ((v79<=(1 + 2)) or (2280<=511)) then local v119=v78[1902 -((315 -209) + 1794) ];local v120=v76[v119];local v121=v78[1 + 2 ];for v151=1,v121 do v120[v151]=v76[v119 + v151 ];end elseif ((v79==(2 + 2)) or (1676<=463)) then v76[v78[5 -3 ]]=v76[v78[(2 + 5) -4 ]][v78[7 -3 ]];else local v160=v78[116 -(4 + 110) ];local v161,v162=v69(v76[v160](v13(v76,v160 + (585 -(57 + (1050 -(423 + 100)))) ,v78[1430 -(41 + 1386) ])));v71=(v162 + v160) -(104 -(17 + 1 + 85)) ;local v163=0 -0 ;for v223=v160,v71 do local v224=0 + 0 ;while true do if ((1796 -((1392 -889) + 1293))==v224) then v163=v163 + (1 -(0 + 0)) ;v76[v223]=v161[v163];break;end end end end elseif ((3869==3869) and (v79<=((794 -(326 + 445)) -15))) then if (v79<=(5 + 1)) then local v122=1061 -(810 + 251) ;local v123;local v124;while true do if (v122==(0 + (0 -0))) then v123=v78[168 -(122 + 44) ];v124=v76[v78[5 -(4 -2) ]];v122=3 -2 ;end if (v122==(734 -((1659 -948) + 22))) then v76[v123 + 1 + 0 ]=v124;v76[v123]=v124[v78[1 + 3 ]];break;end end elseif (v79>(13 -6)) then for v230=v78[67 -(30 + 35) ],v78[3 + 0 ] do v76[v230]=nil;end else v70=v78[1260 -(1043 + 214) ];end elseif (v79<=(33 -24)) then v76[v78[1214 -((1034 -(530 + 181)) + 889) ]]=v60[v78[7 -4 ]];elseif (v79>(415 -(255 + 150))) then v76[v78[582 -((1242 -(614 + 267)) + 219) ]][v78[3]]=v78[324 -(53 + 267) ];else v70=v78[1 + 2 ];end elseif (v79<=(54 -37)) then if ((1158<=2613) and (v79<=((1785 -(19 + 13)) -(404 + 1335)))) then if (v79<=12) then local v127=v78[415 -(15 + 398) ];v76[v127](v76[v127 + (983 -(18 + 964)) ]);elseif ((v79==(48 -35)) or (2364<=1999)) then local v168=(0 -0) + 0 ;local v169;local v170;local v171;while true do if ((((0 -0) + 0)==v168) or (4922<194)) then v169=v78[852 -(20 + 830) ];v170={v76[v169](v76[v169 + (127 -(116 + 10)) ])};v168=1 + 0 ;end if (v168==(739 -(542 + 196))) then v171=0 -0 ;for v275=v169,v78[2 + 2 ] do local v276=0;while true do if ((0 + 0)==v276) then v171=v171 + 1 + 0 ;v76[v275]=v170[v171];break;end end end break;end end else v76[v78[4 -2 ]]=v76[v78[7 -4 ]];end elseif ((v79<=(1566 -(1126 + 425))) or (2091<31)) then local v128=405 -(118 + 287) ;local v129;local v130;local v131;local v132;while true do if ((v128==(3 -2)) or (2430>=4872)) then v71=(v131 + v129) -(1122 -((207 -89) + 1003)) ;v132=0 -0 ;v128=379 -(142 + 235) ;end if ((0 -0)==v128) then v129=v78[1 + 1 ];v130,v131=v69(v76[v129](v13(v76,v129 + (978 -(553 + 424)) ,v78[5 -2 ])));v128=2 -1 ;end if (v128==(2 + 0)) then for v246=v129,v71 do local v247=0;while true do if (v247==(1167 -(645 + 522))) then v132=v132 + 1 + 0 ;v76[v246]=v130[v132];break;end end end break;end end elseif ((v79>16) or (4770<1735)) then v76[v78[2 + 0 ]]=v29(v67[v78[2 + 1 ]],nil,v60);else v76[v78[2 + 0 ]][v78[6 -(6 -3) ]]=v76[v78[4]];end elseif ((v79<=(55 -35)) or (4439<=2350)) then if (v79<=(45 -27)) then v76[v78[2 -(1812 -(1293 + 519)) ]]=v60[v78[6 -3 ]];elseif (v79==(6 + (26 -13))) then v76[v78[268 -(28 + (621 -383)) ]]=v76[v78[14 -11 ]][v78[757 -(239 + 514) ]];else v76[v78[1 + 1 ]]=v78[3 + 0 ]~=(1329 -(797 + 532)) ;end elseif (v79<=(16 + 6)) then if (v79>(8 + 13)) then local v180=0 + 0 ;local v181;local v182;local v183;while true do if ((v180==(470 -((728 -347) + 89))) or (4479<4466)) then v181=v78[4 -2 ];v182={v76[v181](v76[v181 + 1 + 0 ])};v180=1;end if (v180==((1724 -992) -(476 + 255))) then v183=1156 -(1074 + 82) ;for v277=v181,v78[1134 -(196 + 173 + 761) ] do v183=v183 + 1 + 0 ;v76[v277]=v182[v183];end break;end end else v76[v78[2 -0 ]]=v78[1787 -(214 + 1570) ]~=(0 -(0 + 0)) ;end elseif (v79==(261 -(64 + 174))) then local v185=v78[1 + 1 ];v76[v185]=v76[v185](v76[v185 + 1 + 0 ]);else v76[v78[2 -(0 -0) ]][v78[339 -(144 + 192) ]]=v78[1730 -(1668 + 58) ];end elseif ((2547>1225) and (v79<=((59 + 194) -(42 + 174)))) then if ((4671>2674) and (v79<=((26 + 52) -48))) then if (v79<=(55 -28)) then if (v79<=(19 + 6)) then v76[v78[2 + 0 ]]={};elseif (v79==(12 + 9 + 5)) then for v233=v78[1506 -(363 + 1141) ],v78[3] do v76[v233]=nil;end elseif ((v76[v78[1582 -(1183 + 397) ]]==v78[(1109 -(709 + 387)) -(1867 -(673 + 1185)) ]) or (3696<3327)) then v70=v70 + (2 -1) ;else v70=v78[3 + 0 ];end elseif ((v79<=(21 + 7)) or (4542==2970)) then v76[v78[1977 -(1913 + 62) ]][v78[(2372 -1554) -(98 + 717) ]]=v76[v78[830 -(802 + 24) ]];elseif (v79>((60 -41) + 10)) then do return;end else local v189=v78[5 -3 ];v76[v189]=v76[v189]();end elseif (v79<=(1966 -(565 + (2250 -882)))) then if ((252<=1977) and (v79<=(116 -85))) then v76[v78[1663 -(1477 + 184) ]]=v76[v78[3]];elseif ((v79>(43 -(8 + 3))) or (1436==3775)) then v76[v78[2 + 0 ]]();else local v191=0;local v192;while true do if (v191==(856 -(564 + 292))) then v192=v78[(2 + 0) -0 ];v76[v192](v13(v76,v192 + (2 -1) ,v78[3]));break;end end end elseif (v79<=(339 -(244 + 60))) then if (v79>(27 + 7)) then local v193=0 + 0 ;local v194;while true do if ((476 -((55 -14) + 435))==v193) then v194=v78[1003 -(938 + 63) ];v76[v194](v76[v194 + 1 + 0 ]);break;end end elseif (v76[v78[1127 -(936 + 47 + 142) ]]==v78[19 -15 ]) then v70=v70 + 1 + 0 ;else v70=v78[1616 -(1565 + 48) ];end elseif (v79==(83 -47)) then v76[v78[2 + 0 ]]();else v76[v78[1140 -((1558 -776) + 356) ]]=v29(v67[v78[270 -((344 -168) + 91) ]],nil,v60);end elseif (v79<=(111 -(1948 -(446 + 1434)))) then if ((v79<=((1341 -(1040 + 243)) -18)) or (1618<930)) then if (v79<=(1130 -(975 + 117))) then v76[v78[1877 -(157 + (5127 -3409)) ]]=v78[3 + 0 ];elseif ((4723>4153) and (v79==(148 -109))) then v76[v78[6 -(1851 -(559 + 1288)) ]]=v78[10 -7 ];else do return;end end elseif ((v79<=(191 -150)) or (3654>=4654)) then local v142=v78[2];v76[v142]=v76[v142](v13(v76,v142 + ((1932 -(609 + 1322)) -(454 -(13 + 441))) ,v78[1021 -(697 + (1199 -878)) ]));elseif (v79>((298 -184) -72)) then local v198=v78[3 -(4 -3) ];v76[v198]=v76[v198](v13(v76,v198 + (2 -1) ,v71));else local v200=0 + 0 ;local v201;while true do if (v200==(0 -0)) then v201=v78[5 -3 ];v76[v201]=v76[v201](v13(v76,v201 + (1228 -(322 + 905)) ,v71));break;end end end elseif (v79<=(9 + 37)) then if (v79<=(80 -36)) then local v144=(23 + 588) -(602 + 9) ;local v145;while true do if (v144==(1189 -(449 + 740))) then v145=v78[874 -(826 + 46) ];v76[v145]=v76[v145](v13(v76,v145 + (948 -(245 + 702)) ,v78[3]));break;end end elseif ((951<=1496) and (v79>(142 -97))) then local v202=0 + 0 ;local v203;local v204;while true do if (v202==(1034 -(125 + (3301 -2392)))) then v203=v78[1900 -(260 + 1638) ];v204=v76[v78[443 -(382 + 58) ]];v202=3 -2 ;end if ((v202==(1 + 0)) or (1736==571)) then v76[v203 + (1 -0) ]=v204;v76[v203]=v204[v78[11 -7 ]];break;end end else local v205=1205 -(902 + 303) ;local v206;while true do if (v205==(512 -(409 + 103))) then v206=v78[3 -1 ];v76[v206]=v76[v206]();break;end end end elseif ((v79<=(115 -67)) or (896>4769)) then if ((v79>(5 + 42)) or (1045<=1020)) then local v207=v78[1692 -(399 + 722 + 569) ];local v208=v76[v207];local v209=v78[(96 + 121) -(22 + 192) ];for v237=684 -(483 + 200) ,v209 do v208[v237]=v76[v207 + v237 ];end else local v210=v78[1 + 1 ];local v211=v76[v210];for v240=v210 + 1 + 0 ,v78[666 -(174 + 489) ] do v7(v211,v76[v240]);end end elseif (v79>(127 -78)) then local v212=v78[1465 -(1404 + (175 -116)) ];local v213=v78[10 -6 ];local v214=v212 + (526 -(303 + 221)) ;local v215={v76[v212](v76[v212 + (1 -0) ],v76[v214])};for v241=766 -(468 + 297) ,v213 do v76[v214 + v241 ]=v215[v241];end local v216=v215[563 -(334 + 228) ];if (v216 or (1160<=328)) then v76[v214]=v216;v70=v78[10 -7 ];else v70=v70 + (2 -1) ;end else local v217=0 -0 ;local v218;while true do if (v217==((0 + 0) -0)) then v218=v78[1 + 1 ];v76[v218]=v76[v218](v76[v218 + 1 ]);break;end end end v70=v70 + (237 -(141 + 95)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
