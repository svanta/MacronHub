--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v90=v5(v81,v19);v19=nil;return v90;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-1)))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + 1)) ;return v82-(v82%(620 -(555 + 64))) ;else local v83=(147 + 784) -((1734 -(282 + 595)) + 74) ;local v84;while true do if (v83==(568 -(367 + 201))) then v84=2^(v32-((2565 -(1523 + 114)) -(214 + 713))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -0 ;local v36;local v37;while true do if (v35==(1065 -(68 + 997))) then v36,v37=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;v35=1;end if (v35==(118 -(32 + 19 + 66))) then return (v37 * (251 + 5)) + v36 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (960 -(892 + (415 -(87 + 263)))) );v18=v18 + (9 -5) ;return (v41 * (31011612 -14234396)) + (v40 * (120312 -54776)) + (v39 * 256) + v38 ;end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(183 -(67 + (555 -(416 + 26))))) then if (v47==0) then if (v46==(0 + 0)) then return v48 * ((0 -0) -0) ;else v47=1;v45=0 + 0 ;end elseif (v47==((3492 + 4643) -6088)) then return ((v46==(952 -(802 + (265 -115)))) and (v48 * ((2 -1)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(745 + 278) ) * (v45 + (v46/(2^(1049 -(915 + 82))))) ;end if (v42==(2 -1)) then v45=(439 -(145 + 293)) + 0 ;v46=(v20(v44,1 -0 ,(1637 -(44 + 386)) -(1069 + 118) ) * (2^(72 -40))) + v43 ;v42=(1489 -(998 + 488)) -1 ;end if (v42==(1 + 1)) then v47=v20(v44,(12 + 25) -16 ,31);v48=((v20(v44,32 + 0 )==(792 -(368 + 423))) and  -1) or (3 -2) ;v42=21 -(10 + 8) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=1;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1139 -(116 + 1022)) );v18=v18 + v49 ;local v51={};for v65=4 -3 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if ((869 -(550 + 317))~=v52) then else for v91= #"\\",v23() do local v92=(function() return 0 -0 ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if (v92~=(1 -0)) then else while true do if (v93==(0 -0)) then v94=(function() return v21();end)();if (v20(v94, #",", #"[")==0) then local v111=(function() return 285 -(134 + 151) ;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v111==(1666 -(970 + 695))) then local v117=(function() return 0 -0 ;end)();while true do if (v117~=(1991 -(582 + 1408))) then else v111=(function() return 2;end)();break;end if (v117==(0 -0)) then v114=(function() return {v22(),v22(),nil,nil};end)();if (v112==(0 -0)) then local v221=(function() return 0;end)();local v222=(function() return;end)();while true do if (v221==(1824 -(1195 + 629))) then v222=(function() return 0 -0 ;end)();while true do if ((241 -(187 + 54))==v222) then v114[ #"asd"]=(function() return v22();end)();v114[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v112== #"~") then v114[ #"xxx"]=(function() return v23();end)();elseif (v112==2) then v114[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v112== #"91(") then local v246=(function() return 0;end)();local v247=(function() return;end)();while true do if (0==v246) then v247=(function() return 0;end)();while true do if ((780 -(162 + 618))==v247) then v114[ #"gha"]=(function() return v23() -(2^(12 + 4)) ;end)();v114[ #"asd1"]=(function() return v22();end)();break;end end break;end end end v117=(function() return 1 + 0 ;end)();end end end if (v111==0) then local v118=(function() return 0 -0 ;end)();local v119=(function() return;end)();while true do if (v118~=0) then else v119=(function() return 0 -0 ;end)();while true do if (v119~=1) then else v111=(function() return 1 + 0 ;end)();break;end if (v119~=0) then else v112=(function() return v20(v94,2, #"xnx");end)();v113=(function() return v20(v94, #".dev",6);end)();v119=(function() return 1637 -(1373 + 263) ;end)();end end break;end end end if (v111==(1003 -(451 + 549))) then if (v20(v113, #"xxx", #"asd")== #"}") then v114[ #".dev"]=(function() return v58[v114[ #".com"]];end)();end v53[v91]=(function() return v114;end)();break;end if ((1 + 1)~=v111) then else if (v20(v113, #"\\", #",")~= #"|") then else v114[2 -0 ]=(function() return v58[v114[2]];end)();end if (v20(v113,2,2)== #"\\") then v114[ #"91("]=(function() return v58[v114[ #"asd"]];end)();end v111=(function() return 4 -1 ;end)();end end end break;end end break;end if (v92~=(1384 -(746 + 638))) then else local v104=(function() return 0;end)();while true do if (v104==(0 + 0)) then v93=(function() return 0;end)();v94=(function() return nil;end)();v104=(function() return 1 -0 ;end)();end if ((342 -(218 + 123))==v104) then v92=(function() return 1;end)();break;end end end end end for v95= #"~",v23() do v54[v95-#"!" ]=(function() return v28();end)();end return v56;end if ( #">"~=v52) then else local v87=(function() return 1581 -(1535 + 46) ;end)();while true do if (v87~=2) then else v52=(function() return 2 + 0 ;end)();break;end if (v87~=1) then else for v105= #"|",v57 do local v106=(function() return 0 + 0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106~=(560 -(306 + 254))) then else local v110=(function() return 0;end)();while true do if ((1 + 0)~=v110) then else v106=(function() return 1;end)();break;end if ((0 -0)~=v110) then else v107=(function() return 1467 -(899 + 568) ;end)();v108=(function() return nil;end)();v110=(function() return 1;end)();end end end if (v106==(1 + 0)) then v109=(function() return nil;end)();while true do if (v107==1) then if (v108== #"~") then v109=(function() return v21()~=(0 -0) ;end)();elseif (v108==(605 -(268 + 335))) then v109=(function() return v24();end)();elseif (v108~= #"91(") then else v109=(function() return v25();end)();end v58[v105]=(function() return v109;end)();break;end if ((290 -(60 + 230))==v107) then local v116=(function() return 0;end)();while true do if ((573 -(426 + 146))~=v116) then else v107=(function() return 1 + 0 ;end)();break;end if (v116==0) then v108=(function() return v21();end)();v109=(function() return nil;end)();v116=(function() return 1457 -(282 + 1174) ;end)();end end end end break;end end end v56[ #"xxx"]=(function() return v21();end)();v87=(function() return 2;end)();end if (v87==(811 -(569 + 242))) then v57=(function() return v23();end)();v58=(function() return {};end)();v87=(function() return 1;end)();end end end if (v52==(0 -0)) then local v88=(function() return 0 + 0 ;end)();local v89=(function() return;end)();while true do if (v88~=(1024 -(706 + 318))) then else v89=(function() return 1251 -(721 + 530) ;end)();while true do if (v89~=0) then else v53=(function() return {};end)();v54=(function() return {};end)();v89=(function() return 1;end)();end if (v89~=(1273 -(945 + 326))) then else v52=(function() return  #">";end)();break;end if (1==v89) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v89=(function() return 4 -2 ;end)();end end break;end end end end end local function v29(v59,v60,v61) local v62=v59[1190 -(449 + 740) ];local v63=v59[2 + 0 ];local v64=v59[703 -(271 + 429) ];return function(...) local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=1 + 0 ;local v72= -(1995 -(109 + 1885));local v73={};local v74={...};local v75=v12("#",...) -(1501 -(1408 + (1561 -(1269 + 200)))) ;local v76={};local v77={};for v85=1086 -((883 -422) + 625) ,v75 do if ((4228>=1225) and (v85>=v69)) then v73[v85-v69 ]=v74[v85 + (1289 -(993 + 295)) ];else v77[v85]=v74[v85 + 1 + 0 ];end end local v78=(v75-v69) + (441 -(382 + 58)) ;local v79;local v80;while true do local v86=1171 -(418 + 753) ;while true do if ((3328>2238) and (v86==(0 + 0))) then v79=v67[v71];v80=v79[1 + 0 ];v86=1 + 0 ;end if ((3839>1405) and (v86==1)) then if (v80<=(6 + 16)) then if (v80<=(539 -(406 + 123))) then if (v80<=(9 -5)) then if (v80<=(1770 -(1749 + 20))) then if (v80==(1690 -((1936 -(98 + 717)) + 569))) then local v121=v79[216 -(22 + 192) ];local v122=v77[v121];local v123=v79[1 + 2 ];for v147=684 -(483 + 200) ,v123 do v122[v147]=v77[v121 + v147 ];end else v77[v79[1324 -((2075 -(802 + 24)) + 73) ]]={};end elseif (v80<=(5 -3)) then v77[v79[1 + 1 ]]=v77[v79[3 -0 ]];elseif ((v80==((1979 -831) -(466 + (856 -177)))) or (1293<=507)) then v77[v79[564 -(334 + 34 + 194) ]][v79[10 -7 ]]=v79[9 -5 ];else v77[v79[5 -3 ]][v79[1903 -(106 + 1379 + 415) ]]=v79[240 -(141 + 95) ];end elseif (v80<=(7 + 0)) then if ((v80<=(2 + 3)) or (2896<805)) then for v150=v79[4 -2 ],v79[1 + 1 + 1 ] do v77[v150]=nil;end elseif ((2316==2316) and (v80==(16 -10))) then v77[v79[5 -3 ]]();else local v159=v79[5 -3 ];v77[v159]=v77[v159](v13(v77,v159 + 1 + 0 ,v72));end elseif (v80<=8) then local v127=v79[116 -(4 + 110) ];local v128=v77[v79[587 -(57 + 527) ]];v77[v127 + ((309 + 1119) -(41 + 1386)) ]=v128;v77[v127]=v128[v79[107 -(17 + 86) ]];elseif (v80>(7 + 2)) then local v161=0 + 0 ;local v162;while true do if (v161==((0 -0) -0)) then v162=v79[5 -3 ];v77[v162]=v77[v162]();break;end end else v77[v79[(560 -392) -(122 + 44) ]][v79[5 -2 ]]=v77[v79[12 -8 ]];end elseif ((v80<=(14 + 2)) or (2570==1533)) then if (v80<=(2 + 11)) then if ((v80<=((50 + 87) -(55 + 71))) or (883==1460)) then if ((v77[v79[2 -0 ]]==v79[1794 -(573 + 1217) ]) or (4619<=999)) then v71=v71 + (1 -0) ;else v71=v79[68 -(30 + 35) ];end elseif (v80>((8 + 10) -6)) then v77[v79[2 + 0 ]]=v77[v79[1260 -(1043 + 214) ]];else for v210=v79[7 -(5 + 0) ],v79[3 -0 ] do v77[v210]=nil;end end elseif (v80<=(1226 -(323 + 889))) then v77[v79[5 -3 ]]=v61[v79[583 -(361 + 219) ]];elseif ((v80==(335 -(53 + 267))) or (3410>4116)) then v77[v79[808 -(118 + 688) ]]={};else v71=v79[1 + 2 ];end elseif (v80<=(432 -(15 + 398))) then if ((v80<=(999 -(18 + 964))) or (903>=3059)) then local v134=v79[7 -5 ];v77[v134](v77[v134 + 1 + 0 ]);elseif ((v80==(12 + 6)) or (3976<2857)) then local v170=850 -(20 + 830) ;local v171;local v172;local v173;local v174;while true do if (v170==(1 + 0)) then v72=(v173 + v171) -(127 -(85 + 31 + 10)) ;v174=0 + 0 ;v170=4 -2 ;end if ((4930>2307) and (v170==(740 -(542 + 196)))) then for v236=v171,v72 do v174=v174 + (1 -0) ;v77[v236]=v172[v174];end break;end if (v170==(0 + 0 + 0)) then v171=v79[2 + 0 ];v172,v173=v70(v77[v171](v13(v77,v171 + (1062 -(810 + 251)) ,v79[2 + 1 ])));v170=1 + 0 ;end end else local v175=v79[1 + 1 ];v77[v175]=v77[v175]();end elseif ((v80<=(52 -32)) or (4046<1291)) then v71=v79[7 -4 ];elseif (v80>(1572 -(1126 + (1858 -(797 + 636))))) then v77[v79[407 -(118 + 287) ]]=v79[11 -8 ]~=(1121 -(118 + 1003)) ;else v77[v79[1 + 1 ]]=v29(v68[v79[8 -5 ]],nil,v61);end elseif ((v80<=(411 -(142 + 235))) or (4241==3545)) then if ((v80<=(126 -98)) or (4048>4232)) then if (v80<=(6 + 19)) then if (v80<=(1000 -(553 + 424))) then v77[v79[(14 -11) -1 ]]=v61[v79[3 + 0 ]];elseif (v80>(77 -53)) then v77[v79[2 + 0 ]]=v79[2 + 1 ];else local v181=v79[1 + 1 ];v77[v181]=v77[v181](v77[v181 + 1 + 0 ]);end elseif (v80<=((1675 -(1427 + 192)) -30)) then do return;end elseif ((v80==(75 -48)) or (1750>=3473)) then local v183=v79[4 -(1 + 1) ];v77[v183]=v77[v183](v77[v183 + 1 + 0 ]);else v77[v79[9 -7 ]]=v77[v79[(791 -450) -(118 + 220) ]][v79[2 + 0 + 1 + 1 ]];end elseif (v80<=(784 -(239 + 514))) then if (v80<=(11 + 18)) then local v138=1329 -(797 + (858 -(192 + 134))) ;local v139;while true do if (v138==(0 + 0)) then v139=v79[8 -6 ];v77[v139](v13(v77,v139 + (1277 -(316 + 960)) + 0 ,v79[6 -(2 + 1) ]));break;end end elseif (v80==30) then local v187=1202 -(373 + 829) ;local v188;local v189;local v190;while true do if (v187==(732 -(476 + 255))) then v190=v79[(875 + 258) -(369 + 761) ];for v239=1 + 0 + 0 ,v190 do v189[v239]=v77[v188 + v239 ];end break;end if ((3166==3166) and (v187==(0 + 0))) then v188=v79[2 -0 ];v189=v77[v188];v187=1 -(0 -0) ;end end else v77[v79[240 -((615 -(83 + 468)) + 174) ]]=v29(v68[v79[1 + 2 ]],nil,v61);end elseif (v80<=(47 -15)) then local v140=336 -((1950 -(1202 + 604)) + 192) ;local v141;while true do if ((1763<3724) and ((216 -((196 -154) + 174))==v140)) then v141=v79[2];v77[v141](v13(v77,v141 + 1 + 0 ,v79[3]));break;end end elseif (v80>(25 + (13 -5))) then local v192=v79[2 + 0 ];v77[v192]=v77[v192](v13(v77,v192 + 1 + 0 ,v72));else v77[v79[(3236 -2067) -(645 + 522) ]]=v77[v79[1507 -(363 + 1141) ]][v79[1584 -(1183 + (722 -(45 + 280))) ]];end elseif ((57<=2723) and (v80<=(121 -81))) then if (v80<=(28 + 9)) then if ((v80<=(27 + 8)) or (2070==443)) then v77[v79[1977 -(1913 + 62) ]]();elseif ((v80==36) or (2705==1393)) then if (v77[v79[2 + 0 ]]==v79[(10 + 0) -(6 + 0) ]) then v71=v71 + (1934 -(565 + 1368)) ;else v71=v79[11 -8 ];end else local v196=1661 -(1477 + 184) ;local v197;while true do if (((0 -0)==v196) or (4601<61)) then v197=v79[(576 + 1000) -(1281 + 163 + 130) ];v77[v197]=v77[v197](v13(v77,v197 + ((47 + 220) -(28 + 238)) ,v79[3 + 0 ]));break;end end end elseif (v80<=(894 -(564 + (540 -248)))) then v77[v79[1561 -(1381 + 178) ]][v79[4 -1 ]]=v77[v79[11 -7 ]];elseif (v80==(343 -(244 + 60))) then local v198=0 + 0 ;local v199;local v200;while true do if (v198==0) then v199=v79[478 -(41 + 435) ];v200=v77[v79[1004 -(938 + 63) ]];v198=471 -(381 + 89) ;end if (v198==(1 + 0)) then v77[v199 + ((3037 -(340 + 1571)) -(936 + 189)) ]=v200;v77[v199]=v200[v79[1 + 1 + 2 ]];break;end end else local v201=v79[1615 -((3337 -(1733 + 39)) + (131 -83)) ];local v202,v203=v70(v77[v201](v13(v77,v201 + (1157 -(1074 + 82)) ,v79[6 -3 ])));v72=(v203 + v201) -(1 + (1034 -(125 + 909))) ;local v204=0;for v214=v201,v72 do v204=v204 + (1785 -(214 + 1570)) ;v77[v214]=v202[v204];end end elseif (v80<=((3129 -(1096 + 852)) -(782 + 356))) then if (v80<=(308 -(176 + 41 + 50))) then local v144=v79[4 -2 ];v77[v144](v77[v144 + ((1 -0) -0) ]);elseif (v80==42) then v77[v79[1094 -(975 + 117) ]]=v79[1878 -(157 + 1718) ];else do return;end end elseif (v80<=(36 + 8)) then local v145=0 -(0 + 0) ;local v146;while true do if (v145==(0 -(512 -(409 + 103)))) then v146=v79[2];v77[v146]=v77[v146](v13(v77,v146 + (1019 -((933 -(46 + 190)) + 321)) ,v79[7 -4 ]));break;end end elseif (v80==(95 -50)) then local v207=v79[3 -1 ];local v208=v77[v207];for v219=v207 + (2 -1) ,v79[2 + 1 ] do v7(v208,v77[v219]);end else v77[v79[3 -1 ]]=v79[7 -4 ]~=(1227 -(322 + 905)) ;end v71=v71 + (612 -(602 + (104 -(51 + 44)))) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
