--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v83=v2(v0(v30,16));if v19 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v5(v83,v19);v19=nil;v91=1;end end else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=0;local v85;while true do if (v84==(0 -0)) then v85=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-((1497 -(282 + 595)) -(555 + 64))) -(v32-(932 -(857 + 74)))) + 1)) ;return v85-(v85%(569 -(367 + 201))) ;end end else local v86=(929 -(214 + 713))^(v32-1) ;return (((v31%(v86 + v86))>=v86) and ((1638 -(1523 + 114)) + 0)) or (0 + 0) ;end end local function v21() local v34=0 + (1270 -(226 + 1044)) ;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=1;end if (v34==(1066 -(68 + 997))) then return v35;end end end local function v22() local v36=0 -0 ;local v37;local v38;while true do if ((117 -(32 + 85))==v36) then v37,v38=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + 1 ;v36=1;end if (v36==((1770 -812) -(892 + 65))) then return (v38 * (610 -354)) + v37 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (4 -1) );v18=v18 + (354 -(87 + 263)) ;return (v42 * 16777216) + (v41 * ((161343 -95627) -(50 + 17 + (449 -336)))) + (v40 * (188 + 68)) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=953 -(802 + 150) ;local v46=(v20(v44,2 -1 ,36 -16 ) * ((444 -(23 + 393 + 26))^(102 -70))) + v43 ;local v47=v20(v44,16 + 2 + 3 ,1028 -((1800 -(261 + 624)) + 82) );local v48=((v20(v44,(159 -69) -58 )==(1 + 0)) and  -(1 -0)) or (1188 -(1069 + (1198 -(1020 + 60)))) ;if (v47==(0 + 0)) then if (v46==(0 -0)) then return v48 * 0 ;else local v93=(2561 -(630 + 793)) -(116 + 1022) ;while true do if (v93==(0 -0)) then v47=1 -(0 -0) ;v45=0 + (0 -0) ;break;end end end elseif (v47==(3636 -1589)) then return ((v46==(0 + 0)) and (v48 * (1/(791 -(368 + 423))))) or (v48 * NaN) ;end return v8(v48,v47-(2520 -1497) ) * (v45 + (v46/((6 -4)^(70 -(10 + 8))))) ;end local function v25(v49) local v50;if  not v49 then local v87=0 + 0 ;while true do if (((1913 -(1789 + 124)) -0)==v87) then v49=v23();if (v49==((2513 -(745 + 21)) -(760 + 987))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;local v51={};for v66=1, #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 121 -(17 + 104) ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v68=(function() return 0 -0 ;end)();while true do if (v68==(0 + 0)) then if (0~=v52) then else local v98=(function() return 0 + 0 ;end)();local v99=(function() return;end)();while true do if (v98~=(0 -0)) then else v99=(function() return 0 -0 ;end)();while true do if (1~=v99) then else v55=(function() return {};end)();v56=(function() return {};end)();v99=(function() return 1 + 1 ;end)();end if (v99~=2) then else v52=(function() return 1637 -(1373 + 263) ;end)();break;end if (v99==0) then v53=(function() return function(v152,v153,v154) local v155=(function() return 0;end)();local v156=(function() return;end)();while true do if (v155==(1000 -(451 + 549))) then v156=(function() return 0;end)();while true do if (v156==(0 + 0)) then v152[v153-#"," ]=(function() return v154();end)();return v152,v153,v154;end end break;end end end;end)();v54=(function() return {};end)();v99=(function() return 1 -0 ;end)();end end break;end end end if (v52~=(2 -0)) then else v57[ #"-19"]=(function() return v21();end)();for v103= #"/",v23() do local v104=(function() return v21();end)();if (v20(v104, #"[", #"<")==(1384 -(746 + 638))) then local v106=(function() return 0 + 0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v106==1) then local v111=(function() return 0;end)();while true do if (v111~=(1 -0)) then else v106=(function() return 2;end)();break;end if (v111==(341 -(218 + 123))) then v109=(function() return nil;end)();v110=(function() return nil;end)();v111=(function() return 1;end)();end end end if (v106==0) then local v112=(function() return 0;end)();while true do if (v112==1) then v106=(function() return 1;end)();break;end if (v112~=0) then else local v207=(function() return 0;end)();while true do if (v207==1) then v112=(function() return 1;end)();break;end if (v207==(1581 -(1535 + 46))) then v107=(function() return 0;end)();v108=(function() return nil;end)();v207=(function() return 1 + 0 ;end)();end end end end end if (v106~=2) then else while true do if (v107==0) then local v208=(function() return 0 + 0 ;end)();while true do if ((560 -(306 + 254))~=v208) then else v108=(function() return v20(v104,1 + 1 , #"-19");end)();v109=(function() return v20(v104, #"?id=",6);end)();v208=(function() return 1;end)();end if (v208==1) then v107=(function() return  #"!";end)();break;end end end if (v107== #":") then local v209=(function() return 0 -0 ;end)();while true do if (v209~=0) then else v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==0) then local v240=(function() return 0;end)();local v241=(function() return;end)();while true do if (v240~=0) then else v241=(function() return 1467 -(899 + 568) ;end)();while true do if ((0 + 0)==v241) then v110[ #"91("]=(function() return v22();end)();v110[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v108== #"{") then v110[ #"xxx"]=(function() return v23();end)();elseif (v108==2) then v110[ #"nil"]=(function() return v23() -(2^(38 -22)) ;end)();elseif (v108== #"-19") then local v248=(function() return 603 -(268 + 335) ;end)();local v249=(function() return;end)();while true do if (v248==0) then v249=(function() return 0;end)();while true do if ((290 -(60 + 230))==v249) then v110[ #"xnx"]=(function() return v23() -((574 -(426 + 146))^16) ;end)();v110[ #".dev"]=(function() return v22();end)();break;end end break;end end end v209=(function() return 1;end)();end if ((1 + 0)==v209) then v107=(function() return 2;end)();break;end end end if (v107== #"xxx") then if (v20(v109, #"nil", #"91(")== #"~") then v110[ #"0836"]=(function() return v59[v110[ #".dev"]];end)();end v54[v103]=(function() return v110;end)();break;end if (v107==(1458 -(282 + 1174))) then local v211=(function() return 0;end)();local v212=(function() return;end)();while true do if (v211~=0) then else v212=(function() return 811 -(569 + 242) ;end)();while true do if (v212==(2 -1)) then v107=(function() return  #"asd";end)();break;end if ((0 + 0)~=v212) then else if (v20(v109, #"~", #"{")== #"/") then v110[1026 -(706 + 318) ]=(function() return v59[v110[2]];end)();end if (v20(v109,2,2)~= #"}") then else v110[ #"-19"]=(function() return v59[v110[ #"gha"]];end)();end v212=(function() return 1;end)();end end break;end end end end break;end end end end for v105= #">",v23() do v55,v105,v28=(function() return v53(v55,v105,v28);end)();end return v57;end v68=(function() return 1252 -(721 + 530) ;end)();end if (v68==(1272 -(945 + 326))) then if (v52==(2 -1)) then local v101=(function() return 0;end)();local v102=(function() return;end)();while true do if (0==v101) then v102=(function() return 0 + 0 ;end)();while true do if ((700 -(271 + 429))==v102) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v102=(function() return 1;end)();end if ((2 + 0)==v102) then v52=(function() return 1502 -(1408 + 92) ;end)();break;end if (v102==1) then v59=(function() return {};end)();for v143= #"<",v58 do local v144=(function() return 0;end)();local v145=(function() return;end)();local v146=(function() return;end)();local v147=(function() return;end)();while true do if (v144==0) then v145=(function() return 1086 -(461 + 625) ;end)();v146=(function() return nil;end)();v144=(function() return 1;end)();end if (1~=v144) then else v147=(function() return nil;end)();while true do if (v145~=1) then else if (v146== #" ") then v147=(function() return v21()~=(1288 -(993 + 295)) ;end)();elseif (v146==(1 + 1)) then v147=(function() return v24();end)();elseif (v146~= #"91(") then else v147=(function() return v25();end)();end v59[v143]=(function() return v147;end)();break;end if (0==v145) then local v238=(function() return 1171 -(418 + 753) ;end)();while true do if ((0 + 0)~=v238) then else v146=(function() return v21();end)();v147=(function() return nil;end)();v238=(function() return 1;end)();end if (v238==1) then v145=(function() return 1;end)();break;end end end end break;end end end v102=(function() return 2;end)();end end break;end end end break;end end end end local function v29(v60,v61,v62) local v63=v60[873 -(826 + 46) ];local v64=v60[1 + 1 ];local v65=v60[1 + 2 ];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v27;local v73=1 + 0 ;local v74= -(530 -(406 + (1070 -(245 + 702))));local v75={};local v76={...};local v77=v12("#",...) -(1 + 0) ;local v78={};local v79={};for v88=1322 -(1249 + 73) ,v77 do if ((3748>2964) and (v88>=v71)) then v75[v88-v71 ]=v76[v88 + 1 + 0 ];else v79[v88]=v76[v88 + 1 ];end end local v80=(v77-v71) + 1 + 0 ;local v81;local v82;while true do v81=v69[v73];v82=v81[(3044 -(260 + 1638)) -(466 + 679) ];if (v82<=(462 -(382 + 58))) then if (v82<=(24 -14)) then if (v82<=(11 -7)) then if (v82<=1) then if ((2497==2497) and (v82>(1900 -(106 + 1794)))) then local v113=v81[2];local v114=v79[v113];local v115=v81[1 + 2 ];for v148=1,v115 do v114[v148]=v79[v113 + v148 ];end else local v116=v81[1 + 1 ];v79[v116]=v79[v116]();end elseif ((2095<=3686) and (v82<=(5 -3))) then v73=v81[(22 -15) -4 ];elseif (v82==(117 -(4 + 110))) then local v157=v81[(487 + 99) -(57 + 527) ];v79[v157](v79[v157 + (1428 -(41 + 1386)) ]);else local v158=103 -(17 + 86) ;local v159;while true do if (v158==(0 + 0)) then v159=v81[2];v79[v159](v13(v79,v159 + (1 -0) ,v81[3]));break;end end end elseif (v82<=(20 -13)) then if ((v82<=(171 -((251 -129) + 44))) or (1595>=4474)) then local v119=v81[2 -0 ];local v120=v79[v81[9 -6 ]];v79[v119 + (2 -1) ]=v120;v79[v119]=v120[v81[4 + (1205 -(902 + 303)) ]];elseif (v82>(1 + 5)) then local v160=v81[3 -1 ];local v161=v79[v160];local v162=v81[68 -(30 + 35) ];for v213=1,v162 do v161[v213]=v79[v160 + v213 ];end else v79[v81[(3 -1) + 0 ]]();end elseif (v82<=((3046 -1781) -(1043 + 214))) then v79[v81[7 -5 ]][v81[3]]=v81[4];elseif (v82==(1221 -(323 + 889))) then local v163=v81[5 -3 ];v79[v163]=v79[v163](v79[v163 + (581 -(361 + 219)) ]);else for v216=v81[322 -(53 + 267) ],v81[1 + 2 ] do v79[v216]=nil;end end elseif (v82<=16) then if ((v82<=13) or (4619<2882)) then if (v82<=(424 -(15 + 398))) then v73=v81[985 -(18 + 964) ];elseif (v82>(44 -32)) then v79[v81[2]]=v81[2 + 1 ];else v79[v81[2 + 0 ]]=v79[v81[(74 + 779) -(20 + 830) ]][v81[4]];end elseif (v82<=(11 + 3)) then v79[v81[128 -(116 + 10) ]][v81[1 + 2 ]]=v81[742 -(542 + 196) ];elseif ((v82==15) or (294>=4831)) then local v169=0;local v170;while true do if ((2029<=3084) and (v169==(0 -0))) then v170=v81[1 + 1 ];v79[v170]=v79[v170](v13(v79,v170 + 1 + 0 ,v74));break;end end else v79[v81[1 + 1 ]]=v81[7 -4 ];end elseif (v82<=19) then if (v82<=(43 -26)) then v79[v81[2]]();elseif (v82==(1569 -(1126 + 425))) then v79[v81[407 -(118 + 287) ]]=v79[v81[3]];else local v175=0;local v176;local v177;local v178;local v179;while true do if (v175==(7 -5)) then for v234=v176,v74 do v179=v179 + (1122 -(118 + (2693 -(1121 + 569)))) ;v79[v234]=v177[v179];end break;end if ((v175==1) or (2037==2420)) then v74=(v178 + v176) -1 ;v179=0 -0 ;v175=379 -(142 + 235) ;end if ((4458>3904) and (v175==0)) then v176=v81[9 -7 ];v177,v178=v72(v79[v176](v13(v79,v176 + 1 + 0 ,v81[980 -(553 + 424) ])));v175=1 -0 ;end end end elseif ((436>=123) and (v82<=(18 + 2))) then local v129=v81[2 + 0 ];v79[v129]=v79[v129](v79[v129 + 1 + 0 ]);elseif (v82>((223 -(22 + 192)) + 12)) then for v218=v81[2 + 0 ],v81[6 -(686 -(483 + 200)) ] do v79[v218]=nil;end else do return;end end elseif (v82<=(94 -60)) then if (v82<=(62 -34)) then if ((500<1816) and (v82<=25)) then if (v82<=(7 + 16)) then v79[v81[9 -7 ]]=v29(v70[v81[756 -(239 + 514) ]],nil,v62);elseif ((3574==3574) and (v82>24)) then local v180=0;local v181;while true do if ((221<390) and (v180==((1463 -(1404 + 59)) + 0))) then v181=v81[1331 -((2181 -1384) + 532) ];v79[v181]=v79[v181](v13(v79,v181 + 1 ,v81[3 + 0 ]));break;end end else local v182=v81[1 + 1 ];local v183=v79[v81[6 -3 ]];v79[v182 + (1203 -(373 + 829)) ]=v183;v79[v182]=v183[v81[735 -(476 + (342 -87)) ]];end elseif (v82<=(1156 -((1134 -(468 + 297)) + 761))) then local v132=v81[2];v79[v132](v13(v79,v132 + 1 + (562 -(334 + 228)) ,v81[5 -2 ]));elseif (v82>(51 -24)) then local v187=v81[240 -(64 + 174) ];v79[v187]=v79[v187]();else v79[v81[1 + 1 ]]=v81[3 -0 ]~=((1133 -797) -(144 + 192)) ;end elseif (v82<=((571 -324) -(42 + 174))) then if (v82<=29) then local v133=v81[2 + 0 ];v79[v133](v79[v133 + 1 + 0 ]);elseif (v82==(13 + (30 -13))) then local v190=v81[2];local v191,v192=v72(v79[v190](v13(v79,v190 + (1505 -(363 + 1141)) ,v81[1583 -(1183 + 397) ])));v74=(v192 + v190) -1 ;local v193=(0 + 0) -(236 -(141 + 95)) ;for v220=v190,v74 do v193=v193 + 1 + 0 ;v79[v220]=v191[v193];end elseif (v79[v81[2 + 0 ]]==v81[4]) then v73=v73 + 1 + 0 ;else v73=v81[(5091 -3113) -(1913 + 62) ];end elseif (v82<=(21 + 11)) then v79[v81[5 -3 ]][v81[1936 -((1358 -793) + 1368) ]]=v79[v81[(4 + 11) -11 ]];elseif ((v82==((4641 -2947) -(1477 + 184))) or (2213<=1421)) then if (v79[v81[2 -0 ]]==v81[4 + 0 ]) then v73=v73 + (857 -(564 + 292)) ;else v73=v81[4 -1 ];end else v79[v81[5 -3 ]]=v81[307 -(244 + 60) ]~=(0 + 0) ;end elseif ((3058<4860) and (v82<=(516 -(41 + 435)))) then if ((v82<=37) or (1296>=4446)) then if (v82<=(1036 -(938 + 63))) then v79[v81[2 + 0 ]]=v79[v81[1128 -(936 + 189) ]];elseif ((v82==(12 + 24)) or (1393>4489)) then v79[v81[1615 -(1565 + 48) ]][v81[3]]=v79[v81[3 + 1 ]];else v79[v81[2]]=v62[v81[3]];end elseif ((v82<=(1176 -(782 + 356))) or (4424<27)) then v79[v81[269 -(176 + 91) ]]={};elseif (v82>(101 -62)) then v79[v81[2]]=v62[v81[4 -1 ]];else v79[v81[1094 -(686 + 289 + 117) ]]=v29(v70[v81[1878 -(82 + 75 + (2419 -701)) ]],nil,v62);end elseif (v82<=(35 + 8)) then if ((v82<=(25 + 16)) or (1997>3815)) then local v139=v81[6 -4 ];v79[v139]=v79[v139](v13(v79,v139 + (3 -2) ,v74));elseif ((3465>1913) and (v82==(1060 -((860 -(92 + 71)) + 321)))) then do return;end else local v202=0;local v203;while true do if ((733<1819) and (((0 + 0) -0)==v202)) then v203=v81[3 -1 ];v79[v203]=v79[v203](v13(v79,v203 + 1 ,v81[6 -3 ]));break;end end end elseif (v82<=(18 + 26)) then local v141=v81[3 -1 ];local v142=v79[v141];for v151=v141 + (2 -1) ,v81[1230 -(322 + 905) ] do v7(v142,v79[v151]);end elseif ((v82==45) or (4395==4755)) then v79[v81[2]]={};else v79[v81[613 -(602 + 9) ]]=v79[v81[1192 -(449 + (1244 -504)) ]][v81[4]];end v73=v73 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
