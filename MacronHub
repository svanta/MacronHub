--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v80=v2(v0(v30,16));if v19 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v5(v80,v19);v19=nil;v91=1;end end else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=(v31/((1 + 1)^(v32-(2 -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + 1)) ;return v81-(v81%(620 -(555 + 64))) ;else local v82=931 -(857 + 74) ;local v83;while true do if (v82==(568 -(367 + (1078 -(282 + 595))))) then v83=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v83 + v83))>=v83) and 1) or 0 ;end end end end local function v21() local v34=1637 -(1523 + 114) ;local v35;while true do if ((0 + 0)==v34) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=1 -0 ;end if (1==v34) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v37 * (1114 -858)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (120 -((58 -26) + 85)) );v18=v18 + 4 + 0 ;return (v41 * ((6830081 -3109648) + (13057133 -(87 + 263)))) + (v40 * (66493 -(892 + 65))) + (v39 * ((790 -(67 + 113)) -354)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,2 -1 ,(62 -47) + 3 + 2 ) * ((3 -1)^(32 + 0))) + v42 ;local v46=v20(v43,812 -((1343 -975) + 423) ,123 -(326 -234) );local v47=((v20(v43,(1843 -(814 + 45)) -((1975 -1173) + 150) )==(2 -1)) and  -(3 -2)) or (443 -(416 + 26)) ;if (v46==(0 -0)) then if (v45==(0 + 0)) then return v47 * 0 ;else local v93=0;while true do if ((997 -(915 + 82))==v93) then v46=(1 + 0) -0 ;v44=(0 + 0) -0 ;break;end end end elseif (v46==(2477 -(44 + 386))) then return ((v45==(0 + 0)) and (v47 * ((1 -0)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-((2680 -(261 + 624)) -((357 -156) + 571)) ) * (v44 + (v45/((1189 -(1069 + 118))^((1197 -(1020 + 60)) -65)))) ;end local function v25(v48) local v49;if  not v48 then local v84=1423 -(630 + 793) ;while true do if (v84==((1747 -(760 + 987)) -0)) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v64=3 -2 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v51~=2) then else for v94= #"!",v23() do local v95=(function() return 0;end)();local v96=(function() return;end)();local v97=(function() return;end)();while true do if ((2 -1)~=v95) then else while true do if ((285 -(134 + 151))==v96) then v97=(function() return v21();end)();if (v20(v97, #"|", #"|")~=(1665 -(970 + 695))) then else local v114=(function() return 0 -0 ;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (v114~=(1991 -(582 + 1408))) then else local v119=(function() return 0;end)();while true do if (1~=v119) then else v114=(function() return 6 -4 ;end)();break;end if ((0 -0)==v119) then v117=(function() return {v22(),v22(),nil,nil};end)();if (v115==0) then local v232=(function() return 0;end)();local v233=(function() return;end)();while true do if (v232~=0) then else v233=(function() return 1824 -(1195 + 629) ;end)();while true do if (v233==0) then v117[ #"-19"]=(function() return v22();end)();v117[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v115== #"<") then v117[ #"xxx"]=(function() return v23();end)();elseif (v115==(2 -0)) then v117[ #"91("]=(function() return v23() -((243 -(187 + 54))^(796 -(162 + 618))) ;end)();elseif (v115~= #"-19") then else local v257=(function() return 0 + 0 ;end)();local v258=(function() return;end)();while true do if (v257==(0 + 0)) then v258=(function() return 0;end)();while true do if ((0 -0)~=v258) then else v117[ #"nil"]=(function() return v23() -((2 -0)^(2 + 14)) ;end)();v117[ #"asd1"]=(function() return v22();end)();break;end end break;end end end v119=(function() return 1;end)();end end end if (v114==(1636 -(1373 + 263))) then local v120=(function() return 0;end)();local v121=(function() return;end)();while true do if (v120==0) then v121=(function() return 1000 -(451 + 549) ;end)();while true do if (v121~=(0 + 0)) then else v115=(function() return v20(v97,2 -0 , #"gha");end)();v116=(function() return v20(v97, #"?id=",9 -3 );end)();v121=(function() return 1385 -(746 + 638) ;end)();end if (1==v121) then v114=(function() return 1 + 0 ;end)();break;end end break;end end end if (v114==3) then if (v20(v116, #"nil", #"19(")== #"[") then v117[ #"0836"]=(function() return v57[v117[ #"0836"]];end)();end v52[v94]=(function() return v117;end)();break;end if (2~=v114) then else if (v20(v116, #"<", #"|")~= #" ") then else v117[2]=(function() return v57[v117[2]];end)();end if (v20(v116,2,2 -0 )== #"!") then v117[ #"nil"]=(function() return v57[v117[ #"xnx"]];end)();end v114=(function() return 344 -(218 + 123) ;end)();end end end break;end end break;end if (v95~=0) then else local v106=(function() return 1581 -(1535 + 46) ;end)();local v107=(function() return;end)();while true do if (v106~=(0 + 0)) then else v107=(function() return 0;end)();while true do if (v107~=(0 + 0)) then else v96=(function() return 560 -(306 + 254) ;end)();v97=(function() return nil;end)();v107=(function() return 1 + 0 ;end)();end if (v107==(1 -0)) then v95=(function() return 1468 -(899 + 568) ;end)();break;end end break;end end end end end for v98= #",",v23() do v53[v98-#":" ]=(function() return v28();end)();end return v55;end if (v51~=0) then else local v87=(function() return 0 + 0 ;end)();local v88=(function() return;end)();while true do if (v87~=(0 -0)) then else v88=(function() return 603 -(268 + 335) ;end)();while true do if (v88==0) then v52=(function() return {};end)();v53=(function() return {};end)();v88=(function() return 291 -(60 + 230) ;end)();end if (v88==2) then v51=(function() return  #" ";end)();break;end if (v88==(573 -(426 + 146))) then v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v88=(function() return 1 + 1 ;end)();end end break;end end end if ( #":"~=v51) then else local v89=(function() return 0;end)();local v90=(function() return;end)();while true do if (v89~=(1456 -(282 + 1174))) then else v90=(function() return 811 -(569 + 242) ;end)();while true do if (v90==(5 -3)) then v51=(function() return 1 + 1 ;end)();break;end if (0==v90) then v56=(function() return v23();end)();v57=(function() return {};end)();v90=(function() return 1;end)();end if ((1025 -(706 + 318))~=v90) then else for v109= #"[",v56 do local v110=(function() return 1251 -(721 + 530) ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110==1) then v113=(function() return nil;end)();while true do if (v111~= #"~") then else if (v112== #"]") then v113=(function() return v21()~=(1271 -(945 + 326)) ;end)();elseif (v112==2) then v113=(function() return v24();end)();elseif (v112~= #"asd") then else v113=(function() return v25();end)();end v57[v109]=(function() return v113;end)();break;end if (0~=v111) then else local v152=(function() return 0 -0 ;end)();local v153=(function() return;end)();while true do if (v152~=(0 + 0)) then else v153=(function() return 0;end)();while true do if (v153==(700 -(271 + 429))) then v112=(function() return v21();end)();v113=(function() return nil;end)();v153=(function() return 1 + 0 ;end)();end if (v153==(1501 -(1408 + 92))) then v111=(function() return  #"~";end)();break;end end break;end end end end break;end if (v110==0) then local v118=(function() return 0;end)();while true do if (v118==(1086 -(461 + 625))) then v111=(function() return 1288 -(993 + 295) ;end)();v112=(function() return nil;end)();v118=(function() return 1 + 0 ;end)();end if (v118~=1) then else v110=(function() return 1172 -(418 + 753) ;end)();break;end end end end end v55[ #"19("]=(function() return v21();end)();v90=(function() return 2;end)();end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1 + 0 ];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1 + (0 -0) ;local v71= -(1 + 0);local v72={};local v73={...};local v74=v12("#",...) -(1 + 0) ;local v75={};local v76={};for v85=529 -(406 + (164 -41)) ,v74 do if (v85>=v68) then v72[v85-v68 ]=v73[v85 + 1 ];else v76[v85]=v73[v85 + (1770 -(1749 + 20)) ];end end local v77=(v74-v68) + 1 + 0 ;local v78;local v79;while true do local v86=0;while true do if ((v86==(1323 -(1249 + 73))) or (2213<=1421)) then if (v79<=22) then if ((3058<4860) and (v79<=(4 + 6))) then if (v79<=(1149 -(466 + 679))) then if (v79<=(2 -1)) then if (v79>0) then v76[v78[5 -3 ]][v78[1903 -(106 + 1794) ]]=v76[v78[2 + 2 ]];else v76[v78[1 + (766 -(468 + 297)) ]]=v76[v78[8 -5 ]][v78[10 -6 ]];end elseif ((v79<=(116 -(4 + 110))) or (1296>=4446)) then local v127=v78[586 -((619 -(334 + 228)) + 527) ];local v128=v76[v127];local v129=v78[1430 -((138 -97) + (3212 -1826)) ];for v154=1,v129 do v128[v154]=v76[v127 + v154 ];end elseif ((v79==(106 -(17 + 86))) or (1393>4489)) then local v163=v78[2 + 0 ];local v164=v76[v78[6 -3 ]];v76[v163 + (2 -1) ]=v164;v76[v163]=v164[v78[4]];elseif ((v76[v78[168 -(122 + 44) ]]==v78[6 -2 ]) or (4424<27)) then v70=v70 + ((5 -2) -2) ;else v70=v78[3 + 0 ];end elseif ((v79<=(2 + 5)) or (1997>3815)) then if (v79<=5) then v76[v78[3 -1 ]][v78[68 -(30 + 35) ]]=v78[4];elseif (v79>(5 + 1)) then local v168=1257 -(297 + 746 + (450 -(141 + 95))) ;local v169;while true do if (v168==(0 -0)) then v169=v78[2];v76[v169]=v76[v169](v13(v76,v169 + (1213 -(323 + 874 + 15)) ,v71));break;end end else v76[v78[5 -3 ]]=v60[v78[583 -((929 -568) + 219) ]];end elseif (v79<=8) then for v157=v78[2],v78[(776 -453) -(53 + 267) ] do v76[v157]=nil;end elseif (v79==(3 + 6)) then local v172=413 -(15 + 398) ;local v173;while true do if ((982 -(18 + 964))==v172) then v173=v78[7 -(2 + 3) ];v76[v173]=v76[v173](v76[v173 + 1 + 0 ]);break;end end else v76[v78[2]][v78[2 + 1 ]]=v76[v78[854 -(20 + 830) ]];end elseif ((3465>1913) and (v79<=16)) then if (v79<=(35 -22)) then if (v79<=11) then local v132=0 + 0 ;local v133;while true do if (v132==(126 -(116 + 10))) then v133=v78[1 + 1 ];v76[v133]=v76[v133](v13(v76,v133 + (739 -(542 + 196)) ,v78[3]));break;end end elseif (v79==(25 -13)) then local v176=0 + 0 ;local v177;while true do if (v176==(0 + 0)) then v177=v78[1 + 1 ];v76[v177](v13(v76,v177 + (2 -1) ,v78[3]));break;end end else local v178=v78[4 -2 ];v76[v178]=v76[v178](v13(v76,v178 + 1 ,v78[1554 -(1126 + 425) ]));end elseif (v79<=(419 -(118 + 287))) then v70=v78[11 -8 ];elseif ((733<1819) and (v79>(1136 -(118 + 1003)))) then v76[v78[5 -3 ]]=v78[380 -(142 + 235) ]~=0 ;else v76[v78[2]]();end elseif (v79<=(86 -67)) then if (v79<=(4 + 10 + 3)) then local v135=v78[2];v76[v135]=v76[v135](v76[v135 + (978 -(553 + 424)) ]);elseif (v79>(33 -15)) then local v181=0 + 0 ;local v182;local v183;local v184;local v185;while true do if (v181==(2 + 0 + 0)) then for v245=v182,v71 do local v246=0 + 0 ;while true do if ((v246==0) or (4395==4755)) then v185=v185 + 1 + 0 ;v76[v245]=v183[v185];break;end end end break;end if ((v181==(0 + 0)) or (3793<2369)) then v182=v78[4 -2 ];v183,v184=v69(v76[v182](v13(v76,v182 + 1 ,v78[7 -4 ])));v181=2 -1 ;end if (v181==(1 + 0)) then v71=(v184 + v182) -((5 -1) -3) ;v185=753 -(239 + 514) ;v181=1 + 1 ;end end else local v186=(784 + 545) -((960 -(92 + 71)) + 532) ;local v187;while true do if ((v186==(0 + 0)) or (4084==265)) then v187=v78[2];v76[v187](v76[v187 + 1 + 0 + 0 ]);break;end end end elseif ((4358==4358) and (v79<=((78 -31) -27))) then v70=v78[3];elseif (v79>(1223 -((1138 -(574 + 191)) + 829))) then v76[v78[733 -(476 + 255) ]]=v29(v67[v78[3]],nil,v60);else v76[v78[1132 -(305 + 64 + 761) ]]=v76[v78[2 + 1 ]];end elseif ((v79<=(61 -27)) or (3138<993)) then if (v79<=(52 -24)) then if (v79<=25) then if (v79<=23) then local v138=v78[240 -(64 + 174) ];v76[v138]=v76[v138]();elseif (v79>(4 + 20)) then local v191=0 -0 ;local v192;local v193;local v194;local v195;while true do if (v191==(336 -(144 + 192))) then v192=v78[218 -(42 + 174) ];v193,v194=v69(v76[v192](v13(v76,v192 + 1 + (0 -0) ,v78[3 + 0 ])));v191=1 + 0 ;end if (v191==1) then v71=(v194 + v192) -1 ;v195=1504 -(363 + 1141) ;v191=2;end if (v191==(1582 -(1183 + 203 + 194))) then for v247=v192,v71 do local v248=0 -0 ;while true do if ((3330>2323) and (v248==(0 + 0))) then v195=v195 + 1 + 0 ;v76[v247]=v193[v195];break;end end end break;end end else v76[v78[1977 -(1913 + 62) ]]=v60[v78[2 + 1 ]];end elseif (v79<=(68 -42)) then local v140=0;local v141;while true do if (v140==(1933 -(565 + 1368))) then v141=v78[7 -5 ];v76[v141](v13(v76,v141 + (1662 -(1477 + 184)) ,v78[3 -0 ]));break;end end elseif ((v79>27) or (3626==3989)) then local v198=0 + 0 ;local v199;while true do if (v198==(856 -(564 + 292))) then v199=v78[2];v76[v199](v76[v199 + (1 -0) ]);break;end end else do return;end end elseif ((v79<=((942 -(254 + 595)) -62)) or (916==2671)) then if (v79<=(333 -(244 + 60))) then local v142=v78[2 + 0 ];local v143=v76[v142];for v159=v142 + (477 -(41 + 435)) ,v78[129 -(55 + 71) ] do v7(v143,v76[v159]);end elseif (v79>(1031 -(938 + 63))) then v76[v78[2]]=v78[3];else do return;end end elseif (v79<=(25 + 7)) then if ((272==272) and (v76[v78[1127 -((1232 -296) + 189) ]]==v78[2 + 2 ])) then v70=v70 + (1614 -(1565 + 48)) ;else v70=v78[2 + 1 ];end elseif (v79==(1171 -(782 + (2146 -(573 + 1217))))) then v76[v78[(744 -475) -(176 + 91) ]]();else local v203=v78[2];v76[v203]=v76[v203](v13(v76,v203 + (2 -1) ,v71));end elseif (v79<=(58 -18)) then if (v79<=(1129 -(975 + 117))) then if (v79<=(1910 -(157 + 1718))) then v76[v78[2 + 0 ]]=v78[(1 + 9) -7 ]~=(0 -0) ;elseif (v79==(1054 -(697 + 321))) then v76[v78[2]]=v76[v78[4 -1 ]][v78[4]];else v76[v78[5 -3 ]]=v29(v67[v78[(944 -(714 + 225)) -2 ]],nil,v60);end elseif (v79<=(87 -(142 -93))) then local v145=0;local v146;local v147;while true do if ((4249<=4839) and (v145==(0 + 0))) then v146=v78[3 -1 ];v147=v76[v78[7 -4 ]];v145=1 -0 ;end if (v145==(1228 -(322 + 905))) then v76[v146 + 1 ]=v147;v76[v146]=v147[v78[615 -(602 + 9) ]];break;end end elseif (v79>((133 + 1095) -(449 + (1071 -331)))) then v76[v78[874 -(826 + 46) ]]={};else local v209=v78[2];local v210=v76[v209];local v211=v78[950 -(245 + 702) ];for v226=(809 -(118 + 688)) -2 ,v211 do v210[v226]=v76[v209 + v226 ];end end elseif (v79<=(14 + (77 -(25 + 23)))) then if (v79<=(1939 -(260 + 1638))) then v76[v78[442 -(382 + 58) ]]={};elseif ((2777<3200) and (v79>(134 -(18 + 74)))) then for v229=v78[2 + (1886 -(927 + 959)) ],v78[5 -2 ] do v76[v229]=nil;end else v76[v78[(16 -11) -3 ]]=v76[v78[3]];end elseif (v79<=44) then v76[v78[2]][v78[3]]=v78[(1941 -(16 + 716)) -(902 + 303) ];elseif ((95<1957) and (v79==(98 -53))) then v76[v78[4 -2 ]]=v78[1 + 2 ];else local v216=1690 -(1121 + 569) ;local v217;while true do if ((826<1717) and (v216==0)) then v217=v78[2];v76[v217]=v76[v217]();break;end end end v70=v70 + ((415 -200) -(22 + 192)) ;break;end if ((1426>=1105) and ((683 -(483 + 200))==v86)) then v78=v66[v70];v79=v78[1];v86=1464 -(1404 + (156 -(11 + 86))) ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
