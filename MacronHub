--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v89=v2(v0(v30,16));if v19 then local v111=v5(v89,v19);v19=nil;return v111;else return v89;end end end);local function v20(v31,v32,v33) if v33 then local v90=0 -0 ;local v91;while true do if (v90==(0 + 0)) then v91=(v31/((5 -3)^(v32-((878 -(282 + 595)) -0))))%((4 -2)^(((v33-((2257 -(1523 + 114)) -(555 + 64))) -(v32-(1 + 0))) + (932 -(857 + 74)))) ;return v91-(v91%(569 -((523 -156) + 201))) ;end end else local v92=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v92 + v92))>=v92) and (1066 -(68 + 997))) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + 2 ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 );v18=v18 + (121 -(32 + 85)) ;return (v40 * (16441815 + 335401)) + (v39 * (14533 + 51003)) + (v38 * 256) + v37 ;end local function v24() local v41=957 -(892 + 65) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(7 -(12 -8))) then if (v46==(0 -0)) then if (v45==((18 -(10 + 8)) -0)) then return v47 * (350 -((334 -247) + 263)) ;else local v118=180 -(67 + (555 -(416 + 26))) ;while true do if (v118==(0 + 0)) then v46=2 -1 ;v44=0 + 0 ;break;end end end elseif (v46==(8135 -6088)) then return ((v45==(952 -(802 + 150))) and (v47 * (1/0))) or (v47 * NaN) ;end return v8(v47,v46-(2753 -(5523 -3793)) ) * (v44 + (v45/((3 -1)^(23 + 29)))) ;end if (v41==(0 + 0)) then v42=v23();v43=v23();v41=998 -((1618 -703) + 82) ;end if (v41==(5 -3)) then v46=v20(v43,(451 -(145 + 293)) + 8 ,40 -9 );v47=((v20(v43,1219 -(1069 + 118) )==(2 -1)) and  -(1 -0)) or (1 + 0) ;v41=4 -1 ;end if (v41==(1 + 0)) then v44=1;v45=(v20(v43,1,20) * ((793 -(368 + 423))^32)) + v42 ;v41=2;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(430 -(44 + 386))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1487 -(998 + 488)) );v18=v18 + v48 ;local v50={};for v66=1 + 0 , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100,v101) local v102=(function() return 1262 -(1091 + 171) ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if (v102~=(0 + 0)) then else local v116=(function() return 0;end)();while true do if (v116~=0) then else v93=(function() return 0 -0 ;end)();v94=(function() return nil;end)();v116=(function() return 3 -2 ;end)();end if ((375 -(123 + 251))==v116) then v102=(function() return 1;end)();break;end end end if (v102~=1) then else local v117=(function() return 0;end)();while true do if (v117~=(0 -0)) then else local v121=(function() return 698 -(208 + 490) ;end)();while true do if ((0 + 0)==v121) then while true do if (v93==0) then v94=(function() return v95();end)();if (v96(v94, #",", #".")==(0 + 0)) then local v224=(function() return 836 -(660 + 176) ;end)();local v225=(function() return;end)();local v226=(function() return;end)();local v227=(function() return;end)();while true do if (v224==2) then if (v96(v226, #"<", #"~")~= #"}") then else v227[1 + 1 ]=(function() return v99[v227[2]];end)();end if (v96(v226,2,204 -(14 + 188) )== #"{") then v227[ #"91("]=(function() return v99[v227[ #"asd"]];end)();end v224=(function() return 678 -(534 + 141) ;end)();end if (3==v224) then if (v96(v226, #"19(", #"asd")== #",") then v227[ #"0313"]=(function() return v99[v227[ #"asd1"]];end)();end v100[v101]=(function() return v227;end)();break;end if (v224==0) then v225=(function() return v96(v94,1 + 1 , #"gha");end)();v226=(function() return v96(v94, #"?id=",6 + 0 );end)();v224=(function() return 1 + 0 ;end)();end if (v224==1) then local v234=(function() return 0 -0 ;end)();local v235=(function() return;end)();while true do if (v234~=0) then else v235=(function() return 0;end)();while true do if (v235==0) then local v239=(function() return 0 -0 ;end)();while true do if (v239==(2 -1)) then v235=(function() return 1;end)();break;end if (v239==(0 + 0)) then v227=(function() return {v97(),v97(),nil,nil};end)();if (v225==0) then local v240=(function() return 0;end)();local v241=(function() return;end)();while true do if (v240==(396 -(115 + 281))) then v241=(function() return 0 -0 ;end)();while true do if (v241==0) then v227[ #"nil"]=(function() return v97();end)();v227[ #"asd1"]=(function() return v97();end)();break;end end break;end end elseif (v225== #"}") then v227[ #"xnx"]=(function() return v98();end)();elseif (v225==2) then v227[ #"19("]=(function() return v98() -(2^16) ;end)();elseif (v225== #"91(") then local v246=(function() return 0 + 0 ;end)();local v247=(function() return;end)();while true do if (v246==(0 -0)) then v247=(function() return 0 -0 ;end)();while true do if (v247~=(867 -(550 + 317))) then else v227[ #"xxx"]=(function() return v98() -(2^16) ;end)();v227[ #"asd1"]=(function() return v97();end)();break;end end break;end end end v239=(function() return 1;end)();end end end if (v235~=(1 -0)) then else v224=(function() return 2 -0 ;end)();break;end end break;end end end end end break;end end return v93,v94,v95,v96,v97,v98,v99,v100,v101;end end end end end end end;end)();local v52=(function() return function(v103,v104,v105) local v106=(function() return 0;end)();local v107=(function() return;end)();while true do if (v106~=0) then else v107=(function() return 0 -0 ;end)();while true do if ((285 -(134 + 151))==v107) then local v122=(function() return 1665 -(970 + 695) ;end)();while true do if (v122==0) then local v123=(function() return 0 -0 ;end)();while true do if (v123==0) then v103[v104-#"!" ]=(function() return v105();end)();return v103,v104,v105;end end end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"|",v57 do local v69=(function() return 1990 -(582 + 1408) ;end)();local v70=(function() return;end)();local v71=(function() return;end)();local v72=(function() return;end)();while true do if (v69==(3 -2)) then v72=(function() return nil;end)();while true do if (v70==1) then if (v71== #"\\") then v72=(function() return v21()~=(0 -0) ;end)();elseif (v71==2) then v72=(function() return v24();end)();elseif (v71== #"91(") then v72=(function() return v25();end)();end v58[v68]=(function() return v72;end)();break;end if (v70==0) then local v120=(function() return 0;end)();while true do if (v120~=(3 -2)) then else v70=(function() return 1825 -(1195 + 629) ;end)();break;end if (v120==(0 -0)) then v71=(function() return v21();end)();v72=(function() return nil;end)();v120=(function() return 1;end)();end end end end break;end if (v69~=0) then else v70=(function() return 0;end)();v71=(function() return nil;end)();v69=(function() return 242 -(187 + 54) ;end)();end end end v56[ #"asd"]=(function() return v21();end)();for v73= #",",v23() do FlatIdent_1743D,Descriptor,v21,v20,v22,v23,v58,v53,v73=(function() return v51(FlatIdent_1743D,Descriptor,v21,v20,v22,v23,v58,v53,v73);end)();end for v74= #"~",v23() do v54,v74,v28=(function() return v52(v54,v74,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[781 -(162 + 618) ];local v64=v60[2];local v65=v60[3 + 0 ];return function(...) local v75=v63;local v76=v64;local v77=v65;local v78=v27;local v79=1 + 0 + (1125 -(936 + 189)) ;local v80= -(1 -0);local v81={};local v82={...};local v83=v12("#",...) -1 ;local v84={};local v85={};for v108=0 + 0 ,v83 do if ((123<=2579) and (v108>=v77)) then v81[v108-v77 ]=v82[v108 + ((2368 -(476 + 255)) -(1373 + 263)) ];else v85[v108]=v82[v108 + (1001 -(451 + 549)) ];end end local v86=(v83-v77) + 1 + 0 ;local v87;local v88;while true do v87=v75[v79];v88=v87[1];if ((v88<=(28 -9)) or (846>=2368)) then if (v88<=(14 -5)) then if ((v88<=(1388 -(746 + 638))) or (4012<=3358)) then if ((1494<=3005) and (v88<=(1 + 0))) then if ((v88==0) or (3111==2134)) then v85[v87[2 -(0 + 0) ]]=v62[v87[(1474 -(369 + 761)) -(218 + 123) ]];else v85[v87[2]]=v29(v76[v87[3]],nil,v62);end elseif (v88<=(1583 -(888 + 647 + 46))) then local v127=0;local v128;local v129;local v130;while true do if (v127==((0 -0) + 0)) then v128=v87[1 + 1 ];v129=v85[v128];v127=(1062 -501) -(306 + 254) ;end if (v127==(1 + 0)) then v130=v87[3];for v228=1 -0 ,v130 do v129[v228]=v85[v128 + v228 ];end break;end end elseif (v88==(1470 -(899 + 568))) then v85[v87[2 + 0 ]]=v87[2 + 1 ];else local v186=v87[1140 -(782 + 356) ];v85[v186]=v85[v186](v85[v186 + (2 -1) ]);end elseif (v88<=(609 -(268 + 335))) then if ((2355==2355) and (v88>5)) then local v131=(528 -(64 + 174)) -(60 + 230) ;local v132;while true do if (0==v131) then v132=v87[574 -(426 + 21 + 125) ];v85[v132]=v85[v132](v13(v85,v132 + 1 + 0 ,v80));break;end end else for v170=v87[1458 -((417 -135) + (1510 -(144 + 192))) ],v87[(1030 -(42 + 174)) -(569 + 242) ] do v85[v170]=nil;end end elseif ((v88<=(20 -13)) or (588<=432)) then local v133=v87[1 + 1 ];v85[v133](v13(v85,v133 + 1 ,v87[3]));elseif (v88==(1032 -(706 + 318))) then v85[v87[2]]={};else local v189=0;local v190;while true do if (v189==0) then v190=v87[(942 + 311) -(721 + 530) ];v85[v190]=v85[v190](v13(v85,v190 + 1 ,v80));break;end end end elseif (v88<=(1285 -(945 + 326))) then if ((4797>=3895) and (v88<=(27 -16))) then if ((3577==3577) and (v88>(9 + 1))) then v85[v87[702 -(271 + 356 + 73) ]][v87[3 + 0 ]]=v85[v87[1504 -((3668 -2260) + 92) ]];else local v136=(462 + 624) -(461 + (2129 -(363 + 1141))) ;local v137;local v138;while true do if (v136==(1289 -((2573 -(1183 + 397)) + 295))) then v85[v137 + (2 -1) + 0 + 0 ]=v138;v85[v137]=v138[v87[(1731 -556) -((1510 -(975 + 117)) + 753) ]];break;end if ((0 + 0)==v136) then v137=v87[2];v138=v85[v87[1878 -(157 + 1718) ]];v136=1;end end end elseif (v88<=(2 + 8 + 2)) then v85[v87[1 + 1 + 0 ]]=v29(v76[v87[1 + 2 ]],nil,v62);elseif ((3794>3693) and (v88==(542 -(406 + 123)))) then do return;end else v85[v87[1771 -((3724 -(1913 + 62)) + 20) ]]=v87[1 + 0 + 2 ]~=(1322 -(1249 + 73)) ;end elseif (v88<=(6 + 10)) then if (v88>(1160 -(466 + 679))) then local v140=v87[2];local v141,v142=v78(v85[v140](v13(v85,v140 + (2 -1) ,v87[3])));v80=(v142 + v140) -1 ;local v143=0 -0 ;for v172=v140,v80 do v143=v143 + (1901 -((280 -174) + 1794)) ;v85[v172]=v141[v143];end else v85[v87[1 + 1 ]][v87[1 + 2 ]]=v87[4];end elseif (v88<=((177 -127) -33)) then local v146=v87[5 -3 ];v85[v146]=v85[v146](v13(v85,v146 + (115 -(4 + 110)) ,v87[587 -((1990 -(565 + 1368)) + 527) ]));elseif ((v88==(1445 -(41 + 1386))) or (1275==4100)) then do return;end else local v192=v87[105 -(17 + 86) ];v85[v192]=v85[v192]();end elseif (v88<=(20 + (30 -21))) then if (v88<=(53 -(108 -79))) then if (v88<=(60 -39)) then if (v88==(186 -(122 + 44))) then v85[v87[2]]={};else v85[v87[2 -0 ]][v87[9 -6 ]]=v87[4 + 0 ];end elseif (v88<=(4 + 18)) then v85[v87[3 -(1019 -(697 + 321)) ]]=v62[v87[68 -(30 + 35) ]];elseif ((v88==23) or (1591>=3580)) then local v194=v87[2];local v195=v85[v194];for v219=v194 + 1 + 0 ,v87[1260 -(1043 + 214) ] do v7(v195,v85[v219]);end else v85[v87[7 -5 ]]=v87[1215 -((879 -556) + 889) ]~=(0 -0) ;end elseif (v88<=(606 -(361 + 219))) then if (v88==(345 -((1714 -(1477 + 184)) + 267))) then local v153=v87[3 -1 ];local v154,v155=v78(v85[v153](v13(v85,v153 + 1 + 0 ,v87[416 -(15 + 398) ])));v80=(v155 + v153) -((1338 -355) -(18 + 899 + 65)) ;local v156=0 -0 ;for v175=v153,v80 do v156=v156 + (857 -(564 + 292)) + 0 ;v85[v175]=v154[v156];end else local v157=0 + 0 ;local v158;while true do if ((983<=1808) and (v157==(850 -(20 + 830)))) then v158=v87[2 + 0 ];v85[v158]=v85[v158](v13(v85,v158 + (127 -(116 + 10)) ,v87[1 + 2 ]));break;end end end elseif (v88<=(765 -(542 + 196))) then v85[v87[3 -1 ]]=v85[v87[3]][v87[(2 -0) + (5 -3) ]];elseif ((v88>((34 -19) + 6 + 7)) or (2150<=1197)) then local v197=v87[1 + 1 ];v85[v197](v85[v197 + (2 -1) ]);else local v198=v87[2];v85[v198](v85[v198 + (2 -1) ]);end elseif (v88<=(1585 -(1126 + 425))) then if (v88<=(436 -(118 + 287))) then if (v88==(117 -87)) then v85[v87[2]]=v87[(2105 -981) -(118 + 1003) ];else v85[v87[(13 -8) -3 ]]=v85[v87[380 -(142 + 235) ]][v87[(322 -(244 + 60)) -14 ]];end elseif (v88<=(7 + 25)) then for v178=v87[979 -(553 + 424) ],v87[5 -2 ] do v85[v178]=nil;end elseif (v88>(30 + 3)) then local v199=v87[(1229 -(322 + 905)) + 0 ];v85[v199](v13(v85,v199 + 1 ,v87[3]));else v85[v87[2]]();end elseif ((3769>=1173) and (v88<=(17 + 5 + 15))) then if (v88<=(15 + 20)) then local v165=v87[2 + 0 ];local v166=v85[v165];local v167=v87[6 -3 ];for v180=1,v167 do v166[v180]=v85[v165 + v180 ];end elseif ((1485==1485) and (v88==36)) then v85[v87[5 -3 ]][v87[6 -3 ]]=v85[v87[(613 -(602 + 9)) + 2 ]];else v85[v87[9 -7 ]]();end elseif (v88<=38) then local v168=753 -((715 -(41 + 435)) + 514) ;local v169;while true do if (v168==0) then v169=v87[1 + 1 ];v85[v169]=v85[v169]();break;end end elseif (v88==(1368 -(797 + 532))) then local v202=v87[2];local v203=v85[v87[1004 -(938 + 63) ]];v85[v202 + (1190 -(449 + 740)) + 0 ]=v203;v85[v202]=v203[v87[2 + 2 ]];else local v207=v87[4 -2 ];v85[v207]=v85[v207](v85[v207 + 1 ]);end v79=v79 + (1203 -(373 + 829)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
