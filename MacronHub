--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v87=v2(v0(v30,16));if v19 then local v118=0;local v119;while true do if (v118==1) then return v119;end if (v118==0) then v119=v5(v87,v19);v19=nil;v118=1;end end else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=0 -0 ;local v89;while true do if (v88==((1637 -(1523 + 114)) -0)) then v89=(v31/(2^(v32-(1 -0))))%(2^(((v33-((2 + 0) -1)) -(v32-1)) + (620 -(555 + 64)))) ;return v89-(v89%1) ;end end else local v90=(1326 -395) -(857 + 74) ;local v91;while true do if (v90==(568 -(367 + 201))) then v91=(929 -(214 + (1778 -(68 + 997))))^(v32-(1 + 0)) ;return (((v31%(v91 + v91))>=v91) and (1 + 0)) or (877 -(282 + 595)) ;end end end end local function v21() local v34=1270 -(222 + 4 + 1044) ;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=1;end if (v34==(118 -(32 + 85))) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + 2 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23() local v38=0 -0 ;local v39;local v40;local v41;local v42;while true do if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (7 -(955 -(802 + 150))) ;v38=351 -((234 -147) + 263) ;end if (v38==(181 -(67 + (204 -91)))) then return (v42 * (12302277 + 4474939)) + (v41 * ((639498 -478597) -95365)) + (v40 * (189 + 67)) + v39 ;end end end local function v24() local v43=v23();local v44=v23();local v45=(2484 -(998 + 488)) -(915 + 27 + 55) ;local v46=(v20(v44,2 -1 ,12 + 8 ) * (((2 + 0) -0)^(1219 -(1069 + 118)))) + v43 ;local v47=v20(v44,47 -(798 -(201 + 571)) ,67 -36 );local v48=((v20(v44,6 + 26 )==(1 -0)) and  -(1 + (1138 -(116 + 1022)))) or 1 ;if (v47==0) then if (v46==(791 -(368 + 423))) then return v48 * (0 -0) ;else local v120=0;while true do if (0==v120) then v47=19 -(10 + 8) ;v45=(0 -0) -(0 + 0) ;break;end end end elseif (v47==(2489 -(416 + 26))) then return ((v46==(0 -0)) and (v48 * ((1 + 0)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((440 -((529 -384) + 293))^((1711 -1229) -(44 + 386))))) ;end local function v25(v49) local v50;if  not v49 then local v92=859 -(814 + 45) ;while true do if (v92==(0 -0)) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v68=(1574 -688) -(261 + 624) , #v50 do v51[v68]=v2(v1(v3(v50,v68,v68)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100) local v93=(function() return 836 -(660 + 176) ;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v93~= #"!") then else if (v94== #">") then v95=(function() return v96()~=(0 + 0) ;end)();elseif (v94==2) then v95=(function() return v97();end)();elseif (v94== #"-19") then v95=(function() return v98();end)();end v99[v100]=(function() return v95;end)();break;end if (0~=v93) then else local v126=(function() return 202 -(14 + 188) ;end)();local v127=(function() return;end)();while true do if (v126~=(675 -(534 + 141))) then else v127=(function() return 0;end)();while true do if (v127~=(1 + 0)) then else v93=(function() return  #"~";end)();break;end if (v127==0) then v94=(function() return v96();end)();v95=(function() return nil;end)();v127=(function() return 1;end)();end end break;end end end end return v93,v94,v95,v96,v97,v98,v99,v100;end;end)();local v53=(function() return function(v101,v102,v103,v104,v105,v106,v107,v108,v109) local v110=(function() return 0;end)();local v101=(function() return;end)();local v102=(function() return;end)();while true do local v117=(function() return 0 + 0 ;end)();while true do if (v117~=0) then else if ((1 + 0)==v110) then while true do if (v101==(0 -0)) then v102=(function() return v103();end)();if (v104(v102, #"[", #",")~=(0 -0)) then else local v134=(function() return 0 -0 ;end)();local v135=(function() return;end)();local v136=(function() return;end)();local v137=(function() return;end)();while true do if (v134~=3) then else if (v104(v136, #"-19", #"gha")~= #" ") then else v137[ #"0313"]=(function() return v107[v137[ #"?id="]];end)();end v108[v109]=(function() return v137;end)();break;end if (v134==(0 + 0)) then local v186=(function() return 0;end)();local v187=(function() return;end)();while true do if ((0 + 0)==v186) then v187=(function() return 0;end)();while true do if (v187==0) then local v252=(function() return 0;end)();while true do if (v252~=(397 -(115 + 281))) then else v187=(function() return 1;end)();break;end if (v252~=0) then else v135=(function() return v104(v102,2, #"91(");end)();v136=(function() return v104(v102, #"0836",13 -7 );end)();v252=(function() return 1;end)();end end end if (v187==(1 + 0)) then v134=(function() return 1;end)();break;end end break;end end end if (v134~=(2 -1)) then else local v188=(function() return 0 -0 ;end)();while true do if (0==v188) then v137=(function() return {v105(),v105(),nil,nil};end)();if (v135==0) then local v247=(function() return 0;end)();local v248=(function() return;end)();while true do if ((867 -(550 + 317))==v247) then v248=(function() return 0 -0 ;end)();while true do if (v248==(0 -0)) then v137[ #"19("]=(function() return v105();end)();v137[ #"0836"]=(function() return v105();end)();break;end end break;end end elseif (v135== #"}") then v137[ #"xxx"]=(function() return v106();end)();elseif (v135==2) then v137[ #"xnx"]=(function() return v106() -((5 -3)^(301 -(134 + 151))) ;end)();elseif (v135== #"19(") then local v259=(function() return 1665 -(970 + 695) ;end)();local v260=(function() return;end)();while true do if (v259==(0 -0)) then v260=(function() return 0;end)();while true do if (0==v260) then v137[ #"19("]=(function() return v106() -(2^(2006 -(582 + 1408))) ;end)();v137[ #"?id="]=(function() return v105();end)();break;end end break;end end end v188=(function() return 1;end)();end if ((3 -2)==v188) then v134=(function() return 2 -0 ;end)();break;end end end if ((7 -5)==v134) then if (v104(v136, #">", #"/")== #"}") then v137[1826 -(1195 + 629) ]=(function() return v107[v137[2 -0 ]];end)();end if (v104(v136,2,243 -(187 + 54) )~= #",") then else v137[ #"gha"]=(function() return v107[v137[ #"-19"]];end)();end v134=(function() return 3;end)();end end end break;end end return v101,v102,v103,v104,v105,v106,v107,v108,v109;end if (v110==(780 -(162 + 618))) then local v132=(function() return 0 + 0 ;end)();while true do if (v132==(1 + 0)) then v110=(function() return 1 -0 ;end)();break;end if (v132==0) then v101=(function() return 0 -0 ;end)();v102=(function() return nil;end)();v132=(function() return 1;end)();end end end break;end end end end;end)();local v54=(function() return function(v111,v112,v113) local v114=(function() return 0 + 0 ;end)();while true do if (v114==(1636 -(1373 + 263))) then local v128=(function() return 0;end)();local v129=(function() return;end)();while true do if (v128==0) then v129=(function() return 0;end)();while true do if ((1000 -(451 + 549))~=v129) then else local v133=(function() return 0;end)();while true do if (v133==(0 + 0)) then v111[v112-#"\\" ]=(function() return v113();end)();return v111,v112,v113;end end end end break;end end end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v70= #" ",v59 do FlatIdent_31905,Type,Cons,v21,v24,v25,v60,v70=(function() return v52(FlatIdent_31905,Type,Cons,v21,v24,v25,v60,v70);end)();end v58[ #"91("]=(function() return v21();end)();for v71= #"}",v23() do FlatIdent_61B23,Descriptor,v21,v20,v22,v23,v60,v55,v71=(function() return v53(FlatIdent_61B23,Descriptor,v21,v20,v22,v23,v60,v55,v71);end)();end for v72= #"/",v23() do v56,v72,v28=(function() return v54(v56,v72,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 -0 ];local v66=v62[1386 -(746 + 638) ];local v67=v62[2 + 1 ];return function(...) local v73=v65;local v74=v66;local v75=v67;local v76=v27;local v77=1;local v78= -(1 -0);local v79={};local v80={...};local v81=v12("#",...) -((5949 -4367) -((3196 -(1477 + 184)) + 46)) ;local v82={};local v83={};for v115=0 + 0 ,v81 do if (v115>=v75) then v79[v115-v75 ]=v80[v115 + 1 ];else v83[v115]=v80[v115 + 1 + 0 ];end end local v84=(v81-v75) + ((764 -203) -(306 + 254)) ;local v85;local v86;while true do local v116=0 + 0 ;while true do if ((v116==(0 -0)) or (1049==2642)) then v85=v73[v77];v86=v85[1468 -(899 + 530 + 38) ];v116=(857 -(564 + 292)) + 0 ;end if ((3358<4012) and (v116==(2 -1))) then if (v86<=(622 -(268 + 335))) then if (v86<=(299 -(60 + 230))) then if (v86<=(576 -(426 + 146))) then if (v86<=(1 + 0)) then if (v86==(1456 -(282 + 1174))) then local v139=v85[813 -(569 + 242) ];local v140=v83[v139];local v141=v85[3];for v189=1,v141 do v140[v189]=v83[v139 + v189 ];end else v83[v85[2]]=v83[v85[3]][v85[11 -7 ]];end elseif ((1494<=3005) and (v86<=(1 + 1))) then v83[v85[(1769 -743) -((2127 -1421) + 318) ]]=v83[v85[1254 -(721 + (834 -(244 + 60))) ]][v85[1275 -(945 + 326) ]];elseif (v86>(7 -4)) then local v199=0 + 0 ;local v200;local v201;local v202;while true do if (v199==(701 -(271 + 429))) then v202=v85[3 + 0 ];for v249=1,v202 do v201[v249]=v83[v200 + v249 ];end break;end if (v199==(1500 -(1408 + 71 + 21))) then v200=v85[1088 -(461 + 625) ];v201=v83[v200];v199=1289 -(993 + 295) ;end end else v83[v85[1 + 1 ]]={};end elseif (v86<=(1177 -(418 + 753))) then if ((v86>(2 + (479 -(41 + 435)))) or (3111==2134)) then v83[v85[1 + 1 ]]();else local v146=v85[1 + 1 ];v83[v146]=v83[v146](v13(v83,v146 + (1002 -(938 + 63)) ,v78));end elseif (v86<=(2 + 5)) then local v148=529 -(406 + 123) ;local v149;local v150;local v151;local v152;while true do if ((2355==2355) and (v148==(1769 -(1749 + 20)))) then v149=v85[2];v150,v151=v76(v83[v149](v13(v83,v149 + 1 + 0 ,v85[1325 -(1249 + 73) ])));v148=1 + 0 ;end if (v148==(1147 -(466 + 679))) then for v239=v149,v78 do local v240=0 -0 ;while true do if ((v240==(0 -0)) or (588<=432)) then v152=v152 + (1901 -(82 + 24 + 1794)) ;v83[v239]=v150[v152];break;end end end break;end if (v148==1) then v78=(v151 + v149) -(1 + 0) ;v152=0 + 0 ;v148=5 -3 ;end end elseif (v86==(21 -(1138 -(936 + 189)))) then v83[v85[116 -(4 + 110) ]]=v29(v74[v85[3]],nil,v64);else local v205=v85[586 -(57 + 527) ];v83[v205](v13(v83,v205 + ((470 + 958) -(41 + 1386)) ,v85[3]));end elseif (v86<=(1627 -(1565 + 48))) then if (v86<=(114 -(17 + 86))) then if (v86==(7 + 3)) then local v153=v85[3 -1 ];v83[v153]=v83[v153](v83[v153 + (2 -1) ]);else v83[v85[168 -(76 + 46 + 44) ]][v85[5 -2 ]]=v83[v85[4]];end elseif (v86<=(39 -27)) then for v192=v85[2 + 0 ],v85[1141 -(782 + 356) ] do v83[v192]=nil;end elseif (v86==13) then v83[v85[1 + 1 ]]=v64[v85[3]];else local v208=0 -(267 -(176 + 91)) ;local v209;while true do if (v208==0) then v209=v85[67 -(30 + 35) ];v83[v209]=v83[v209](v13(v83,v209 + 1 + (0 -0) ,v78));break;end end end elseif ((4797>=3895) and (v86<=16)) then if ((3577==3577) and (v86==(1272 -((1536 -493) + 214)))) then local v157=0 -(1092 -(975 + 117)) ;local v158;while true do if ((3794>3693) and (v157==(1212 -(323 + 889)))) then v158=v85[5 -(1878 -(157 + 1718)) ];v83[v158](v83[v158 + (581 -(361 + 219)) ]);break;end end else local v159=v85[322 -(53 + 217 + 50) ];v83[v159]=v83[v159](v13(v83,v159 + 1 + 0 ,v85[416 -(15 + 398) ]));end elseif (v86<=((3546 -2547) -(18 + 964))) then do return;end elseif (v86==18) then v83[v85[7 -5 ]]=v85[2 + (3 -2) ]~=((1018 -(697 + 321)) + 0) ;else v83[v85[852 -(20 + 830) ]]={};end elseif (v86<=(23 + 6)) then if (v86<=(150 -(116 + (27 -17)))) then if (v86<=(2 + 19)) then if (v86>(758 -(542 + 196))) then v83[v85[3 -1 ]]=v64[v85[1 + 2 ]];else v83[v85[2 + 0 ]][v85[3]]=v83[v85[2 + 2 ]];end elseif ((v86<=22) or (1275==4100)) then local v165=v85[4 -2 ];local v166=v83[v85[3]];v83[v165 + (2 -1) ]=v166;v83[v165]=v166[v85[4]];elseif ((v86>(1574 -(1126 + 425))) or (1591>=3580)) then v83[v85[407 -(118 + 287) ]]=v85[11 -8 ]~=0 ;else local v213=v85[1123 -(118 + 1003) ];v83[v213]=v83[v213]();end elseif ((983<=1808) and (v86<=(76 -50))) then if (v86>(402 -(142 + 235))) then local v170=0 -0 ;local v171;local v172;while true do if (v170==(0 + 0)) then v171=v85[979 -(553 + (898 -474)) ];v172=v83[v85[5 -2 ]];v170=1 + 0 ;end if (v170==(1 + (0 -0))) then v83[v171 + 1 + 0 ]=v172;v83[v171]=v172[v85[1 + 1 + 2 ]];break;end end else local v173=v85[2];v83[v173]=v83[v173](v83[v173 + 1 + 0 ]);end elseif ((v86<=(58 -31)) or (2150<=1197)) then for v194=v85[2],v85[7 -4 ] do v83[v194]=nil;end elseif (v86>(52 -24)) then v83[v85[4 -2 ]][v85[1 + 2 ]]=v85[19 -(40 -25) ];else local v217=v85[755 -((1466 -(322 + 905)) + 514) ];v83[v217](v83[v217 + (612 -(602 + 9)) ]);end elseif ((3769>=1173) and (v86<=(12 + 22))) then if (v86<=((2549 -(449 + 740)) -(797 + 532))) then if (v86==30) then local v175=v85[2];local v176,v177=v76(v83[v175](v13(v83,v175 + 1 + 0 ,v85[2 + (873 -(826 + 46)) ])));v78=(v177 + v175) -(2 -1) ;local v178=1202 -(373 + (1776 -(245 + 702))) ;for v196=v175,v78 do v178=v178 + (732 -(476 + 255)) ;v83[v196]=v176[v178];end else v83[v85[1132 -(369 + 761) ]][v85[3]]=v85[4];end elseif (v86<=(19 + 13)) then do return;end elseif ((1485==1485) and (v86==(59 -26))) then v83[v85[(9 -6) -1 ]]=v85[3];else local v220=v85[240 -(64 + 174) ];v83[v220]=v83[v220]();end elseif ((v86<=37) or (3315<=2782)) then if (v86<=(5 + 30)) then local v181=v85[2 -0 ];v83[v181](v13(v83,v181 + (337 -(47 + 97 + 192)) ,v85[219 -(42 + 174) ]));elseif (v86>(28 + 8)) then v83[v85[2]]=v85[3 + 0 ];else v83[v85[2]]();end elseif (v86<=(17 + 21)) then local v182=1504 -(363 + 1141) ;local v183;local v184;while true do if ((1581 -(1183 + 397))==v182) then for v241=v183 + (2 -1) ,v85[3] do v7(v184,v83[v241]);end break;end if (v182==(0 + (1898 -(260 + 1638)))) then v183=v85[2 + 0 ];v184=v83[v183];v182=1;end end elseif (v86==(2014 -(1913 + 62))) then local v224=v85[2];v83[v224]=v83[v224](v13(v83,v224 + 1 + 0 ,v85[3]));else v83[v85[5 -3 ]]=v29(v74[v85[3]],nil,v64);end v77=v77 + ((2374 -(382 + 58)) -(565 + 1368)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
