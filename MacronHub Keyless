--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v87=0;local v88;while true do if (v87==1) then return v88;end if (v87==0) then v88=v5(v81,v19);v19=nil;v87=1;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-1)))%((5 -(1 + 2))^(((v33-(1 -0)) -(v32-(2 -(878 -(282 + 595))))) + (620 -(555 + 64)))) ;return v82-(v82%1) ;else local v83=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v83 + v83))>=v83) and (928 -(214 + 713))) or ((1637 -(1523 + 114)) + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 2 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=1065 -((125 -57) + 997) ;local v38;local v39;local v40;local v41;while true do if (v37==(1270 -((538 -312) + 1044))) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (17 -13) ;v37=118 -(32 + 85) ;end if (v37==(1 + 0)) then return (v41 * (30800116 -14022900)) + (v40 * (14533 + 51003)) + (v39 * (1213 -(892 + 65))) + v38 ;end end end local function v24() local v42=v23();local v43=v23();local v44=351 -(87 + 263) ;local v45=(v20(v43,181 -(67 + 113) ,20) * ((2 + 0)^(78 -46))) + v42 ;local v46=v20(v43,21,23 + 8 );local v47=((v20(v43,127 -95 )==((1744 -(368 + 423)) -(802 + 150))) and  -(2 -1)) or (1 -0) ;if (v46==(0 + 0)) then if (v45==(997 -(915 + 82))) then return v47 * (0 -0) ;else local v89=0;while true do if (v89==(0 + (0 -0))) then v46=1 -(18 -(10 + 8)) ;v44=1187 -(1069 + 118) ;break;end end end elseif (v46==((17860 -13217) -2596)) then return ((v45==(0 -0)) and (v47 * ((1 + (442 -(416 + 26)))/(0 -(0 -0))))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/(2^(52 + 0)))) ;end local function v25(v48) local v49=0 + 0 ;local v50;local v51;while true do if (v49==(3 -1)) then v51={};for v90=(1558 -1119) -(145 + 293) , #v50 do v51[v90]=v2(v1(v3(v50,v90,v90)));end v49=3;end if (v49==(433 -(44 + 386))) then return v6(v51);end if (v49==(1486 -(998 + 488))) then v50=nil;if  not v48 then local v96=0 + 0 ;while true do if (v96==((859 -(814 + 45)) + 0)) then v48=v23();if (v48==(772 -(201 + (1406 -835)))) then return "";end break;end end end v49=1139 -(116 + 1022) ;end if (v49==(4 -3)) then v50=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;v49=7 -5 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v65=(function() return 0 + 0 ;end)();while true do if (v65==(1822 -(301 + 1521))) then if (v52~= #",") then else local v97=(function() return 0;end)();local v98=(function() return;end)();while true do if (v97==(0 -0)) then v98=(function() return 0 + 0 ;end)();while true do if (v98==(2 -0)) then v52=(function() return 5 -3 ;end)();break;end if (v98==(1288 -(993 + 295))) then v57=(function() return v23();end)();v58=(function() return {};end)();v98=(function() return 1701 -(1419 + 281) ;end)();end if ((1 -0)==v98) then for v138= #"|",v57 do local v139=(function() return 1171 -(418 + 753) ;end)();local v140=(function() return;end)();local v141=(function() return;end)();local v142=(function() return;end)();while true do if ((1 + 0)==v139) then v142=(function() return nil;end)();while true do if (v140== #"\\") then if (v141== #"\\") then v142=(function() return v21()~=(74 -(71 + 3)) ;end)();elseif (v141==2) then v142=(function() return v24();end)();elseif (v141~= #"asd") then else v142=(function() return v25();end)();end v58[v138]=(function() return v142;end)();break;end if (v140~=(0 + 0)) then else local v261=(function() return 0 -0 ;end)();while true do if (v261~=(1 + 0)) then else v140=(function() return  #",";end)();break;end if (v261~=(0 -0)) then else v141=(function() return v21();end)();v142=(function() return nil;end)();v261=(function() return 1770 -(1749 + 20) ;end)();end end end end break;end if (v139~=(241 -(187 + 54))) then else local v222=(function() return 780 -(162 + 618) ;end)();while true do if (v222==1) then v139=(function() return 1 + 0 ;end)();break;end if (v222==(1322 -(1249 + 73))) then v140=(function() return 0;end)();v141=(function() return nil;end)();v222=(function() return 1;end)();end end end end end v56[ #"asd"]=(function() return v21();end)();v98=(function() return 2 + 0 ;end)();end end break;end end end if (v52==0) then local v99=(function() return 0 -0 ;end)();local v100=(function() return;end)();while true do if (v99~=0) then else v100=(function() return 1145 -(466 + 679) ;end)();while true do if (v100~=(0 -0)) then else v53=(function() return {};end)();v54=(function() return {};end)();v100=(function() return 1 -0 ;end)();end if (v100==(1 + 1)) then v52=(function() return  #"~";end)();break;end if (v100~=(1637 -(1373 + 263))) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v100=(function() return 5 -3 ;end)();end end break;end end end v65=(function() return 1 + 0 ;end)();end if ((1 -0)==v65) then if (v52==2) then for v101= #"!",v23() do local v102=(function() return v21();end)();if (v20(v102, #">", #"|")==(0 + 0)) then local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v105==(0 -0)) then local v111=(function() return 0 -0 ;end)();while true do if (v111~=1) then else v105=(function() return 2 -1 ;end)();break;end if (v111~=(1384 -(746 + 638))) then else v106=(function() return 584 -(57 + 527) ;end)();v107=(function() return nil;end)();v111=(function() return 1428 -(41 + 1386) ;end)();end end end if (v105==(1 + 0)) then local v112=(function() return 0;end)();while true do if (v112==0) then v108=(function() return nil;end)();v109=(function() return nil;end)();v112=(function() return 1 + 0 ;end)();end if (v112==(1 -0)) then v105=(function() return 343 -(218 + 123) ;end)();break;end end end if (v105~=(5 -3)) then else while true do if (v106== #"~") then local v202=(function() return 0;end)();local v203=(function() return;end)();while true do if (v202==(1581 -(1535 + 46))) then v203=(function() return 0 + 0 ;end)();while true do if (v203~=(1 + 0)) then else v106=(function() return 2 -0 ;end)();break;end if (v203==(560 -(306 + 254))) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 + 0)) then local v264=(function() return 0 -0 ;end)();local v265=(function() return;end)();while true do if (v264==(0 + 0)) then v265=(function() return 0;end)();while true do if (v265==(1467 -(899 + 568))) then v109[ #"19("]=(function() return v22();end)();v109[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v107== #">") then v109[ #"-19"]=(function() return v23();end)();elseif (v107==(2 + 0)) then v109[ #"19("]=(function() return v23() -(2^(32 -16)) ;end)();elseif (v107== #"19(") then local v272=(function() return 0 -0 ;end)();local v273=(function() return;end)();while true do if (v272==(603 -(268 + 335))) then v273=(function() return 290 -(60 + 230) ;end)();while true do if (v273~=(1257 -(1043 + 214))) then else v109[ #"-19"]=(function() return v23() -((574 -(426 + 146))^(60 -44)) ;end)();v109[ #"?id="]=(function() return v22();end)();break;end end break;end end end v203=(function() return 1 + 0 ;end)();end end break;end end end if (0~=v106) then else local v204=(function() return 1456 -(282 + 1174) ;end)();while true do if (v204==(811 -(569 + 242))) then v107=(function() return v20(v102,5 -3 , #"xnx");end)();v108=(function() return v20(v102, #"0836",1 + 5 );end)();v204=(function() return 1025 -(706 + 318) ;end)();end if (v204~=(1252 -(721 + 530))) then else v106=(function() return  #"]";end)();break;end end end if (v106~=(1273 -(945 + 326))) then else local v205=(function() return 0;end)();local v206=(function() return;end)();while true do if (v205==(0 + 0)) then v206=(function() return 413 -(15 + 398) ;end)();while true do if (1==v206) then v106=(function() return  #"-19";end)();break;end if ((0 -0)~=v206) then else if (v20(v108, #",", #">")== #"/") then v109[2]=(function() return v58[v109[2 + 0 ]];end)();end if (v20(v108,2,702 -(271 + 429) )~= #"}") then else v109[ #"xxx"]=(function() return v58[v109[ #"gha"]];end)();end v206=(function() return 1 + 0 ;end)();end end break;end end end if (v106== #"-19") then if (v20(v108, #"gha", #"xxx")== #"|") then v109[ #"?id="]=(function() return v58[v109[ #"asd1"]];end)();end v53[v101]=(function() return v109;end)();break;end end break;end end end end for v103= #"|",v23() do v54[v103-#"]" ]=(function() return v28();end)();end return v56;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[535 -(43 + 260 + 230) ];local v64=v59[736 -(711 + 22) ];return function(...) local v66=v62;local v67=v63;local v68=v64;local v69=v27;local v70=1 + 0 ;local v71= -(851 -(5 + 15 + 830));local v72={};local v73={...};local v74=v12("#",...) -(127 -(116 + 10)) ;local v75={};local v76={};for v84=0 + 0 ,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + 1 + 0 ];else v76[v84]=v73[v84 + (1745 -(1344 + 400)) ];end end local v77=(v74-v68) + (739 -(542 + 196)) ;local v78;local v79;while true do v78=v66[v70];v79=v78[1 -0 ];if (v79<=(7 + 16)) then if ((4872>2430) and (v79<=(6 + 5))) then if ((v79<=(21 -16)) or (4770<1735)) then if ((v79<=(2 + 0)) or (4439<=2350)) then if (v79<=0) then v76[v78[1741 -(404 + 1335) ]][v78[2 + 1 ]]=v76[v78[10 -6 ]];elseif (v79>(1 + 0)) then local v145=0 -0 ;local v146;while true do if (v145==(1551 -(1126 + 425))) then v146=v78[407 -((273 -155) + 287) ];v76[v146]=v76[v146]();break;end end else do return;end end elseif (v79<=3) then v76[v78[7 -5 ]]=v76[v78[1124 -(118 + 232 + 771) ]][v78[11 -(3 + 4) ]];elseif (v79==(381 -(142 + 235))) then local v147=0 -0 ;local v148;local v149;local v150;local v151;while true do if ((v147==(1 + 0 + 0)) or (4479<4466)) then v71=(v150 + v148) -(978 -(553 + 424)) ;v151=0;v147=3 -1 ;end if ((2547>1225) and (v147==(1495 -((1807 -(709 + 387)) + 782)))) then for v252=v148,v71 do local v253=(1858 -(673 + 1185)) -0 ;while true do if (v253==((0 -0) + 0)) then v151=v151 + 1 + 0 ;v76[v252]=v149[v151];break;end end end break;end if (v147==(0 + 0)) then v148=v78[5 -(9 -6) ];v149,v150=v69(v76[v148](v13(v76,v148 + 1 + 0 ,v78[2 + 1 ])));v147=1 + 0 ;end end else local v152=v78[4 -2 ];v76[v152]=v76[v152](v13(v76,v152 + (2 -1) ,v78[7 -4 ]));end elseif (v79<=(17 -9)) then if (v79<=(2 + 4)) then local v117=0 -0 ;local v118;local v119;local v120;while true do if (v117==(4 -3)) then v120=v78[756 -(239 + 514) ];for v223=1 + 0 ,v120 do v119[v223]=v76[v118 + v223 ];end break;end if (v117==(1329 -(797 + 532))) then v118=v78[1838 -(1045 + 791) ];v119=v76[v118];v117=1 + 0 ;end end elseif (v79>(3 + 4)) then v76[v78[4 -(2 -0) ]][v78[1205 -(373 + 829) ]]=v76[v78[270 -(28 + 238) ]];else v76[v78[733 -(476 + 255) ]]();end elseif ((4671>2674) and (v79<=(1139 -(369 + 761)))) then for v143=v78[2 + 0 ],v78[5 -2 ] do v76[v143]=nil;end elseif ((v79==(18 -8)) or (3696<3327)) then local v156=0 + 0 ;local v157;while true do if ((v156==(238 -(64 + 174))) or (4542==2970)) then v157=v78[1 + 1 ];v76[v157](v76[v157 + (1 -0) ]);break;end end else v70=v78[339 -(144 + 192) ];end elseif (v79<=(233 -(42 + 174))) then if ((252<=1977) and (v79<=(8 + 3 + 3))) then if (v79<=(9 + 3)) then v76[v78[2 + 0 ]]={};elseif (v79==(6 + 7)) then local v159=v78[1506 -(363 + 1141) ];local v160=v76[v159];for v211=v159 + (1785 -(214 + 1570)) ,v78[1583 -(1183 + 397) ] do v7(v160,v76[v211]);end else v76[v78[1 + 1 ]]={};end elseif (v79<=(45 -30)) then v76[v78[1 + 1 ]]=v78[3 + 0 + 0 ]~=(0 + 0) ;elseif (v79>(1991 -((2581 -668) + 62))) then v70=v78[2 + 1 ];elseif ((v78[5 -3 ]==v76[v78[1937 -(565 + 1368) ]]) or (1436==3775)) then v70=v70 + (3 -2) ;else v70=v78[1664 -(1477 + 184) ];end elseif ((v79<=(27 -7)) or (1618<930)) then if ((4723>4153) and (v79<=(4 + 14))) then local v123=0 + 0 + 0 ;local v124;while true do if (v123==(0 + 0)) then v124=v78[858 -(564 + 292) ];v76[v124]=v76[v124](v76[v124 + (1 -0) ]);break;end end elseif ((v79>(1488 -(1269 + 200))) or (3654>=4654)) then v76[v78[5 -3 ]]=v76[v78[818 -(98 + 717) ]];else v76[v78[306 -(244 + 60) ]]=v78[3 + (0 -0) ];end elseif (v79<=((975 -478) -((1921 -(446 + 1434)) + 435))) then local v125=v78[2 -0 ];v76[v125]=v76[v125](v13(v76,v125 + (1002 -(938 + 63)) ,v71));elseif ((951<=1496) and (v79==(17 + 5))) then if (v76[v78[2 + (1283 -(1040 + 243)) ]]==v78[1129 -(936 + 189) ]) then v70=v70 + 1 + 0 ;else v70=v78[1616 -(1565 + 48) ];end else v76[v78[2 + 0 ]][v78[1141 -(782 + 356) ]]=v78[13 -9 ];end elseif (v79<=((901 -599) -(176 + 91))) then if (v79<=(75 -46)) then if ((v79<=26) or (1736==571)) then if (v79<=(34 -10)) then local v127=0 + 0 ;local v128;local v129;while true do if (v127==((2940 -(559 + 1288)) -(975 + 117))) then v76[v128 + (1932 -(609 + 1322)) + 0 ]=v129;v76[v128]=v129[v78[1879 -((611 -(13 + 441)) + 1718) ]];break;end if ((0 + 0)==v127) then v128=v78[6 -4 ];v129=v76[v78[10 -7 ]];v127=1019 -(697 + 321) ;end end elseif (v79>(68 -43)) then v76[v78[3 -1 ]]=v78[6 -3 ]~=(0 + 0) ;else v76[v78[1 + (3 -2) ]]=v61[v78[5 -2 ]];end elseif (v79<=(72 -45)) then v76[v78[1229 -(322 + (2370 -1465)) ]][v78[614 -(602 + 9) ]]=v78[1193 -(449 + 740) ];elseif ((v79>(900 -(826 + 46))) or (896>4769)) then local v172=947 -(245 + 702) ;local v173;local v174;while true do if ((v172==(0 -0)) or (1045<=1020)) then v173=v78[7 -5 ];v174=v76[v78[1 + 2 ]];v172=1899 -(260 + 1638) ;end if (v172==(441 -(382 + 58))) then v76[v173 + (4 -3) ]=v174;v76[v173]=v174[v78[12 -8 ]];break;end end else v76[v78[2 + 0 ]]=v76[v78[5 -2 ]][v78[11 -7 ]];end elseif (v79<=(1237 -(902 + 303))) then if ((v79<=(27 + 3)) or (1160<=328)) then local v132=0 -0 ;local v133;while true do if (v132==(0 -0)) then v133=v78[1 + (4 -3) ];v76[v133](v13(v76,v133 + (1691 -(1121 + 569)) ,v78[1 + 2 ]));break;end end elseif ((3808>2924) and (v79==(245 -(22 + 192)))) then local v177=683 -(483 + (726 -526)) ;local v178;while true do if (v177==((520 + 943) -(1404 + 59))) then v178=v78[1774 -(1733 + 18 + 21) ];v76[v178]=v76[v178](v13(v76,v178 + (2 -1) ,v71));break;end end else local v179=0 -0 ;local v180;while true do if ((3891<4919) and (v179==(765 -((1388 -920) + 297)))) then v180=v78[1950 -(1096 + 852) ];v76[v180](v76[v180 + (563 -(334 + 228)) ]);break;end end end elseif (v79<=(111 -78)) then v76[v78[4 -(2 + 0) ]]=v29(v67[v78[3]],nil,v61);elseif ((v79==(61 -27)) or (2234<=1502)) then if (v78[1 + (1 -0) ]==v76[v78[240 -(141 + 95) ]]) then v70=v70 + 1 + 0 ;else v70=v78[3 + 0 ];end else local v181=0 -0 ;local v182;local v183;local v184;while true do if (v181==(237 -(46 + 190))) then v184=v78[6 -3 ];for v254=1 + 0 ,v184 do v183[v254]=v76[v182 + v254 ];end break;end if (v181==(0 -0)) then v182=v78[2 + 0 ];v183=v76[v182];v181=1 + 0 ;end end end elseif (v79<=((38 + 19) -16)) then if ((v79<=(13 + 10 + 11 + 4)) or (2512<432)) then if (v79<=((168 + 31) -(91 + 1 + 71))) then v76[v78[1907 -(830 + 1075) ]]=v78[3];elseif (v79>(561 -(303 + 221))) then local v185=433 -(153 + 280) ;local v186;while true do if ((v185==(1269 -(231 + 1038))) or (1848==865)) then v186=v78[1 + 1 ];v76[v186]=v76[v186]();break;end end else local v187=0 -0 ;local v188;while true do if (v187==(765 -(574 + (551 -360)))) then v188=v78[2 + 0 ];v76[v188](v13(v76,v188 + 1 ,v78[7 -4 ]));break;end end end elseif (v79<=(32 + 7)) then v76[v78[4 -(2 + 0) ]]=v29(v67[v78[2 + 1 ]],nil,v61);elseif (v79>(889 -(254 + 235 + 360))) then local v189=(66 + 60) -(55 + 71) ;local v190;local v191;local v192;local v193;while true do if ((v189==(0 -0)) or (4682<=4541)) then v190=v78[2];v191,v192=v69(v76[v190](v13(v76,v190 + (1791 -(573 + 1217)) ,v78[8 -5 ])));v189=2 -1 ;end if ((v189==(1 + 1)) or (3026>=4046)) then for v257=v190,v71 do v193=v193 + 1 + 0 ;v76[v257]=v191[v193];end break;end if (v189==(1 -0)) then v71=(v192 + v190) -(940 -(714 + 205 + 20)) ;v193=0 -0 ;v189=2 -0 ;end end else local v194=v78[2];v76[v194]=v76[v194](v13(v76,v194 + 1 + 0 + 0 ,v78[3 -(0 -0) ]));end elseif ((2008>638) and (v79<=(191 -147))) then if (v79<=((525 + 323) -(118 + (1355 -(89 + 578))))) then do return;end elseif (v79>(91 -(25 + 17 + 6))) then v76[v78[1 + 1 ]]=v76[v78[1889 -(927 + 959) ]];else local v198=0 -(0 -0) ;local v199;while true do if (v198==(732 -(16 + 716))) then v199=v78[34 -(19 + 13) ];v76[v199]=v76[v199](v76[v199 + (1 -0) ]);break;end end end elseif (v79<=((1192 -(572 + 477)) -(11 + 86))) then if (v79>(109 -64)) then for v220=v78[287 -(175 + 15 + 95) ],v78[6 -(2 + 1) ] do v76[v220]=nil;end else v76[v78[3 -(1 + 0) ]]();end elseif (v79>(231 -184)) then v76[v78[1798 -(503 + (1379 -(84 + 2))) ]]=v61[v78[(13 -5) -5 ]];elseif (v76[v78[2 + 0 ]]==v78[1065 -(810 + 251) ]) then v70=v70 + 1 + 0 ;else v70=v78[12 -9 ];end v70=v70 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
