--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v90=v2(v0(v30,16));if v19 then local v110=v5(v90,v19);v19=nil;return v110;else return v90;end end end);local function v20(v31,v32,v33) if v33 then local v91=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%((3 -1)^(((v33-(2 -1)) -(v32-1)) + 1)) ;return v91-(v91%(620 -((1432 -(282 + 595)) + 64))) ;else local v92=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v92 + v92))>=v92) and (928 -(214 + 713))) or (0 + 0) ;end end local function v21() local v34=1637 -(1523 + 114) ;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=(2336 -(226 + 1044)) -(68 + 997) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (8 -6) );v18=v18 + (119 -(32 + 85)) ;return (v37 * (251 + 5)) + v36 ;end local function v23() local v38=0 + 0 ;local v39;local v40;local v41;local v42;while true do if (v38==(958 -(892 + 65))) then return (v42 * 16777216) + (v41 * (156337 -90801)) + (v40 * (472 -(396 -(67 + 113)))) + v39 ;end if (v38==0) then v39,v40,v41,v42=v1(v16,v18,v18 + (4 -1) );v18=v18 + 4 ;v38=(258 + 93) -(87 + 263) ;end end end local function v24() local v43=v23();local v44=v23();local v45=1 + 0 ;local v46=(v20(v44,2 -1 ,62 -42 ) * ((2 + (1138 -(116 + 1022)))^(50 -(10 + 8)))) + v43 ;local v47=v20(v44,83 -62 ,983 -(802 + 150) );local v48=((v20(v44,85 -53 )==(1 -0)) and  -(1 + 0)) or (998 -(915 + 82)) ;if (v47==0) then if (v46==(0 -0)) then return v48 * (0 + 0) ;else v47=(4 -3) -0 ;v45=0 -(0 + 0) ;end elseif (v47==(3234 -(1069 + 118))) then return ((v46==(0 -0)) and (v48 * ((1487 -(998 + (1781 -1293)))/0))) or (v48 * NaN) ;end return v8(v48,v47-(2237 -1214) ) * (v45 + (v46/(((3 -2) + (860 -(814 + 45)))^(92 -(98 -58))))) ;end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v67=886 -(261 + 624) , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100,v101) local v102=(function() return 0;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if (v102==(1793 -(1563 + 230))) then local v115=(function() return 285 -(134 + 151) ;end)();while true do if (v115~=0) then else v93=(function() return 1665 -(970 + 695) ;end)();v94=(function() return nil;end)();v115=(function() return 1;end)();end if (v115==(1 -0)) then v102=(function() return 1991 -(582 + 1408) ;end)();break;end end end if (v102~=1) then else local v116=(function() return 0;end)();while true do if ((1456 -(282 + 1174))==v116) then local v122=(function() return 811 -(569 + 242) ;end)();while true do if (v122==(0 -0)) then while true do if (v93==0) then v94=(function() return v95();end)();if (v96(v94, #"}", #"~")==0) then local v152=(function() return 0 + 0 ;end)();local v153=(function() return;end)();local v154=(function() return;end)();local v155=(function() return;end)();while true do if (v152~=(1025 -(706 + 318))) then else local v225=(function() return 0 -0 ;end)();local v226=(function() return;end)();while true do if (v225==(0 -0)) then v226=(function() return 0 -0 ;end)();while true do if (v226~=0) then else local v256=(function() return 0 + 0 ;end)();while true do if (v256==(1824 -(1195 + 629))) then v155=(function() return {v97(),v97(),nil,nil};end)();if (v153==(241 -(187 + 54))) then local v257=(function() return 1500 -(1408 + 92) ;end)();local v258=(function() return;end)();while true do if ((1086 -(461 + 625))==v257) then v258=(function() return 1288 -(993 + 295) ;end)();while true do if (v258==(0 + 0)) then v155[ #"asd"]=(function() return v97();end)();v155[ #"asd1"]=(function() return v97();end)();break;end end break;end end elseif (v153== #",") then v155[ #"91("]=(function() return v98();end)();elseif (v153==(1173 -(418 + 753))) then v155[ #"19("]=(function() return v98() -((1 + 1)^16) ;end)();elseif (v153~= #"xxx") then else local v263=(function() return 0 + 0 ;end)();local v264=(function() return;end)();while true do if (v263==(780 -(162 + 618))) then v264=(function() return 0 + 0 ;end)();while true do if (v264~=(529 -(406 + 123))) then else v155[ #"xnx"]=(function() return v98() -((2 + 0)^(33 -17)) ;end)();v155[ #"0313"]=(function() return v97();end)();break;end end break;end end end v256=(function() return 1770 -(1749 + 20) ;end)();end if (v256~=1) then else v226=(function() return 1 + 0 ;end)();break;end end end if (v226==(1323 -(1249 + 73))) then v152=(function() return 2;end)();break;end end break;end end end if (v152~=(4 -1)) then else if (v96(v154, #"19(", #"xxx")~= #">") then else v155[ #"http"]=(function() return v99[v155[ #"0836"]];end)();end v100[v101]=(function() return v155;end)();break;end if (v152~=(1 + 1)) then else if (v96(v154, #"}", #"{")~= #"}") then else v155[4 -2 ]=(function() return v99[v155[1638 -(1373 + 263) ]];end)();end if (v96(v154,1002 -(451 + 549) ,1902 -(106 + 1794) )== #",") then v155[ #"xnx"]=(function() return v99[v155[ #"19("]];end)();end v152=(function() return 1 + 2 ;end)();end if ((0 -0)==v152) then local v228=(function() return 0 + 0 ;end)();while true do if ((0 -0)==v228) then v153=(function() return v96(v94,1386 -(746 + 638) , #"gha");end)();v154=(function() return v96(v94, #".dev",6);end)();v228=(function() return 1 + 0 ;end)();end if (v228==(1 -0)) then v152=(function() return 2 -1 ;end)();break;end end end end end break;end end return v93,v94,v95,v96,v97,v98,v99,v100,v101;end end end end end end end;end)();local v53=(function() return function(v103,v104,v105) local v106=(function() return 0;end)();local v107=(function() return;end)();while true do if ((341 -(218 + 123))~=v106) then else v107=(function() return 1581 -(1535 + 46) ;end)();while true do if (v107==(0 + 0)) then local v123=(function() return 0 + 0 ;end)();local v124=(function() return;end)();while true do if (0==v123) then v124=(function() return 1427 -(41 + 1386) ;end)();while true do if (v124==(560 -(306 + 254))) then local v126=(function() return 0 + 0 ;end)();while true do if (v126~=0) then else v103[v104-#"," ]=(function() return v105();end)();return v103,v104,v105;end end end end break;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #":",v58 do local v70=(function() return 0 -0 ;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70==(0 -0)) then v71=(function() return 0 + 0 ;end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end if (v70~=1) then else v73=(function() return nil;end)();while true do if (v71==(166 -(122 + 44))) then local v119=(function() return 0 -0 ;end)();local v120=(function() return;end)();while true do if (v119==(0 -0)) then v120=(function() return 0;end)();while true do if (v120==1) then v71=(function() return 1468 -(899 + 568) ;end)();break;end if (v120==(0 + 0)) then local v125=(function() return 0 -0 ;end)();while true do if (v125==(603 -(268 + 335))) then v72=(function() return v21();end)();v73=(function() return nil;end)();v125=(function() return 1 -0 ;end)();end if (v125==1) then v120=(function() return 66 -(30 + 35) ;end)();break;end end end end break;end end end if (v71==1) then if (v72== #" ") then v73=(function() return v21()~=(0 + 0) ;end)();elseif (v72==(292 -(60 + 230))) then v73=(function() return v24();end)();elseif (v72== #"-19") then v73=(function() return v25();end)();end v59[v69]=(function() return v73;end)();break;end end break;end end end v57[ #"xxx"]=(function() return v21();end)();for v74= #"\\",v23() do FlatIdent_89ECE,Descriptor,v21,v20,v22,v23,v59,v54,v74=(function() return v52(FlatIdent_89ECE,Descriptor,v21,v20,v22,v23,v59,v54,v74);end)();end for v75= #"|",v23() do v55,v75,v28=(function() return v53(v55,v75,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1258 -(1043 + 214) ];local v65=v61[7 -5 ];local v66=v61[1215 -(323 + 889) ];return function(...) local v76=v64;local v77=v65;local v78=v66;local v79=v27;local v80=1;local v81= -(2 -1);local v82={};local v83={...};local v84=v12("#",...) -1 ;local v85={};local v86={};for v108=320 -(6 + 47 + (386 -119)) ,v84 do if ((3845<=4891) and (v108>=v78)) then v82[v108-v78 ]=v83[v108 + (807 -(118 + 688)) + 0 ];else v86[v108]=v83[v108 + (414 -(15 + 398)) ];end end local v87=(v84-v78) + 1 ;local v88;local v89;while true do local v109=982 -(18 + 964) ;while true do if ((2085>1894) and (v109==(0 -0))) then v88=v76[v80];v89=v88[1 + 0 ];v109=(49 -(25 + 23)) + 0 ;end if (v109==1) then if (v89<=23) then if ((3595<=4902) and (v89<=(861 -(20 + 830)))) then if (v89<=5) then if ((v89<=2) or (3852==293)) then if (v89<=(0 + 0)) then if ((v86[v88[128 -(23 + 93 + (1896 -(927 + 959))) ]]==v88[1 + 3 ]) or (1559==4588)) then v80=v80 + (739 -(542 + 196)) ;else v80=v88[6 -3 ];end elseif (v89>(1 + 0)) then v86[v88[2 + (0 -0) ]]=v88[2 + 1 ]~=0 ;else v86[v88[4 -2 ]]();end elseif (v89<=((739 -(16 + 716)) -4)) then local v127=v88[1553 -(1126 + 425) ];local v128,v129=v79(v86[v127](v13(v86,v127 + (406 -((227 -109) + 287)) ,v88[100 -(11 + 86) ])));v81=(v129 + v127) -(3 -2) ;local v130=1121 -((287 -169) + 1003) ;for v156=v127,v81 do v130=v130 + (2 -1) ;v86[v156]=v128[v130];end elseif (v89>(381 -(142 + (520 -(175 + 110))))) then local v167=v88[2];local v168=v86[v167];for v219=v167 + ((9 -5) -3) ,v88[1 + 2 ] do v7(v168,v86[v219]);end else do return;end end elseif (v89<=(985 -(553 + 424))) then if (v89<=(10 -4)) then v80=v88[3];elseif (v89>(7 + 0)) then v86[v88[2]][v88[3]]=v86[v88[4 + 0 ]];else v86[v88[2 + 0 ]]=v88[(9 -7) + 1 ]~=(0 + 0) ;end elseif ((v89<=(19 -10)) or (4484==788)) then local v132=v88[5 -3 ];v86[v132]=v86[v132]();elseif ((4568>=3907) and (v89>(22 -(1808 -(503 + 1293))))) then local v172=v88[1 + 1 ];v86[v172]=v86[v172](v13(v86,v172 + (4 -3) ,v81));else v86[v88[755 -(239 + (1435 -921)) ]]={};end elseif (v89<=17) then if (v89<=(5 + 9)) then if (v89<=12) then v86[v88[1331 -(577 + 220 + (1593 -(810 + 251))) ]][v88[3 + 0 ]]=v86[v88[2 + 2 ]];elseif (v89>(29 -16)) then v86[v88[1204 -(373 + 829) ]]=v88[734 -(476 + 255) ];else local v177=v88[1132 -(369 + 761) ];v86[v177]=v86[v177](v86[v177 + 1 + 0 ]);end elseif (v89<=(27 -12)) then v86[v88[2]]=v86[v88[3]][v88[7 -3 ]];elseif (v89>(254 -(64 + 174))) then v86[v88[1 + 1 ]]=v29(v77[v88[3 -(0 + 0) ]],nil,v63);else local v180=0;local v181;while true do if (0==v180) then v181=v88[338 -(144 + 192) ];v86[v181](v86[v181 + 1 ]);break;end end end elseif (v89<=(236 -(42 + 174))) then if (v89<=(14 + 2 + 2)) then local v138=0 + 0 ;local v139;while true do if ((1246<3470) and (v138==(0 + 0))) then v139=v88[1506 -(328 + 35 + 1141) ];v86[v139](v86[v139 + (1581 -((1716 -(43 + 490)) + (1130 -(711 + 22)))) ]);break;end end elseif (v89>(57 -38)) then v86[v88[2 + 0 ]]=v29(v77[v88[3 + 0 ]],nil,v63);else local v183=v88[1977 -(1913 + 62) ];v86[v183](v13(v86,v183 + (3 -2) + 0 ,v88[(866 -(240 + 619)) -4 ]));end elseif (v89<=21) then do return;end elseif (v89>(1955 -(565 + 1368))) then if (v88[2]==v86[v88[15 -11 ]]) then v80=v80 + ((402 + 1260) -(1477 + 184)) ;else v80=v88[3 -0 ];end else v86[v88[2 + 0 ]][v88[(1365 -506) -(564 + 292) ]]=v88[(1 + 5) -2 ];end elseif ((4068>=972) and (v89<=35)) then if ((493<3893) and (v89<=29)) then if ((v89<=(78 -52)) or (1473>=3332)) then if (v89<=(328 -(244 + 60))) then local v140=0 + 0 ;local v141;while true do if ((476 -(41 + 435))==v140) then v141=v88[2];v86[v141]=v86[v141](v13(v86,v141 + (1002 -(938 + 63)) ,v88[3 + 0 ]));break;end end elseif ((v89==25) or (4051<=1157)) then local v186=v88[1127 -(936 + (1933 -(1344 + 400))) ];v86[v186](v13(v86,v186 + 1 + 0 ,v88[3]));elseif ((604<2881) and (v86[v88[2]]==v88[4])) then v80=v80 + (1614 -(1565 + 48)) ;else v80=v88[3];end elseif (v89<=(17 + 10)) then for v159=v88[1140 -((1187 -(255 + 150)) + 281 + 75) ],v88[270 -(176 + 91) ] do v86[v159]=nil;end elseif (v89==(72 -44)) then v86[v88[2 -0 ]]();else local v187=1092 -(975 + 63 + 54) ;local v188;local v189;while true do if ((v187==(1875 -(157 + 1718))) or (900==3377)) then v188=v88[2 + (0 -0) ];v189=v86[v88[10 -7 ]];v187=3 -2 ;end if (v187==(1019 -(697 + 321))) then v86[v188 + (2 -1) ]=v189;v86[v188]=v189[v88[8 -4 ]];break;end end end elseif ((4459>591) and (v89<=((235 -162) -41))) then if (v89<=(12 + (1757 -(404 + 1335)))) then v80=v88[5 -(408 -(183 + 223)) ];elseif (v89>((100 -17) -52)) then v86[v88[1229 -(322 + 905) ]]=v86[v88[614 -(602 + 9) ]];else v86[v88[1191 -(449 + 740) ]][v88[875 -(826 + 46) ]]=v88[951 -(245 + 702) ];end elseif (v89<=33) then v86[v88[2]]=v86[v88[9 -6 ]][v88[4]];elseif (v89==(11 + 23)) then v86[v88[1900 -(260 + 1638) ]]=v88[443 -(382 + 58) ];else local v196=0;local v197;local v198;local v199;local v200;while true do if ((3398>=2395) and ((0 -0)==v196)) then v197=v88[2 + 0 ];v198,v199=v79(v86[v197](v13(v86,v197 + 1 + 0 ,v88[(2 + 3) -2 ])));v196=1;end if (2==v196) then for v250=v197,v81 do v200=v200 + (2 -1) ;v86[v250]=v198[v200];end break;end if ((v196==1) or (2183>=2824)) then v81=(v199 + v197) -(1206 -(902 + 303)) ;v200=(337 -(10 + 327)) -0 ;v196=4 -2 ;end end end elseif (v89<=(4 + 37)) then if (v89<=(27 + 11)) then if ((1936==1936) and (v89<=(1726 -(1121 + 569)))) then local v145=v88[2];local v146=v86[v145];local v147=v88[217 -(22 + 192) ];for v161=684 -(483 + 200) ,v147 do v146[v161]=v86[v145 + v161 ];end elseif (v89>((1838 -(118 + 220)) -(1404 + 59))) then if ((v88[5 -3 ]==v86[v88[4 -0 ]]) or (4832<4313)) then v80=v80 + (766 -(468 + 297)) ;else v80=v88[3];end else for v223=v88[564 -(334 + 76 + 152) ],v88[10 -7 ] do v86[v223]=nil;end end elseif (v89<=(89 -50)) then local v148=v88[2 -0 ];v86[v148]=v86[v148](v13(v86,v148 + 1 ,v88[3]));elseif (v89>40) then local v201=449 -(108 + 341) ;local v202;local v203;local v204;while true do if (v201==(1 + 0)) then v204=v88[239 -(141 + 95) ];for v253=1 + 0 + 0 ,v204 do v203[v253]=v86[v202 + v253 ];end break;end if (v201==(0 -0)) then v202=v88[(16 -12) -2 ];v203=v86[v202];v201=1 + 0 ;end end else local v205=0 -(1493 -(711 + 782)) ;local v206;local v207;while true do if ((4088>3874) and (v205==(1 + 0))) then v86[v206 + 1 + 0 ]=v207;v86[v206]=v207[v88[(9 -4) -1 ]];break;end if (v205==0) then v206=v88[2 + 0 ];v207=v86[v88[166 -(92 + (540 -(270 + 199))) ]];v205=1 + 0 ;end end end elseif ((4332==4332) and (v89<=(73 -29))) then if (v89<=(807 -(574 + 191))) then v86[v88[2 + 0 ]]=v63[v88[7 -4 ]];elseif ((3999>=2900) and (v89==(22 + 21))) then local v208=v88[851 -(254 + 595) ];v86[v208]=v86[v208](v86[v208 + 1 ]);else local v210=v88[(42 + 86) -(55 + (1890 -(580 + 1239))) ];v86[v210]=v86[v210](v13(v86,v210 + (1 -0) ,v81));end elseif (v89<=((5457 -3621) -(573 + 1217))) then if (v89>(124 -79)) then v86[v88[2]]=v86[v88[3 + 0 ]];else local v214=v88[1 + 1 ];v86[v214]=v86[v214]();end elseif ((v89>47) or (2525>4064)) then v86[v88[(1 + 1) -0 ]]={};else v86[v88[941 -(714 + 225) ]]=v63[v88[8 -5 ]];end v80=v80 + (1 -0) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
