--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v88=v5(v81,v19);v19=nil;return v88;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=0 -0 ;local v83;while true do if (v82==(0 -0)) then v83=(v31/(2^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -((1734 -(282 + 595)) + 74)))) + 1)) ;return v83-(v83%1) ;end end else local v84=(570 -(367 + 201))^(v32-(928 -(214 + (2350 -(1523 + 114))))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=0;local v38;local v39;local v40;local v41;while true do if (v37==(1 + 0)) then return (v41 * (16778281 -(68 + 997))) + (v40 * (66806 -((406 -(67 + 113)) + 1044))) + (v39 * (1114 -858)) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + ((3 + 1) -1) );v18=v18 + (121 -(32 + 85)) ;v37=1 + 0 ;end end end local function v24() local v42=v23();local v43=v23();local v44=2 -1 ;local v45=(v20(v43,(19 -(10 + 8)) + 0 ,79 -59 ) * ((954 -(802 + (577 -427)))^32)) + v42 ;local v46=v20(v43,56 -(477 -(416 + 26)) ,55 -24 );local v47=((v20(v43,32)==(1 + 0)) and  -(998 -(915 + 82))) or (2 -(3 -2)) ;if (v46==(0 + 0)) then if (v45==(0 -0)) then return v47 * (1187 -(1069 + 118)) ;else v46=2 -1 ;v44=0;end elseif (v46==(4477 -2430)) then return ((v45==(0 + 0 + 0)) and (v47 * (1/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1015 + (13 -5)) ) * (v44 + (v45/((793 -(368 + 423))^(163 -(549 -(145 + 293)))))) ;end local function v25(v48) local v49=430 -(44 + 386) ;local v50;local v51;while true do if (v49==(1487 -(998 + 488))) then v50=v3(v16,v18,(v18 + v48) -((860 -(814 + 45)) + 0) );v18=v18 + v48 ;v49=(4 -2) + 0 ;end if (v49==(775 -(201 + 31 + 540))) then return v6(v51);end if (v49==(0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==(1138 -(116 + 1022))) then return "";end end v49=4 -3 ;end if (v49==(2 + 0)) then v51={};for v89=3 -2 , #v50 do v51[v89]=v2(v1(v3(v50,v89,v89)));end v49=10 -(892 -(261 + 624)) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 1384 -(746 + 638) ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v66=(function() return 0 + 0 ;end)();while true do if (0==v66) then if ((1 -0)==v52) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v59=(function() return {};end)();for v98= #"!",v58 do local v99=(function() return 0;end)();local v100=(function() return;end)();local v101=(function() return;end)();local v102=(function() return;end)();while true do if (v99==(342 -(218 + 123))) then v102=(function() return nil;end)();while true do if ((1581 -(1535 + 46))==v100) then v101=(function() return v21();end)();v102=(function() return nil;end)();v100=(function() return 1 + 0 ;end)();end if (v100==(1 + 0)) then if (v101== #">") then v102=(function() return v21()~=0 ;end)();elseif (v101==2) then v102=(function() return v24();end)();elseif (v101== #"-19") then v102=(function() return v25();end)();end v59[v98]=(function() return v102;end)();break;end end break;end if (v99==(396 -(115 + 281))) then local v110=(function() return 0;end)();while true do if ((0 -0)==v110) then v100=(function() return 0 + 0 ;end)();v101=(function() return nil;end)();v110=(function() return 1;end)();end if (v110~=(1 -0)) then else v99=(function() return 1 + 0 ;end)();break;end end end end end v52=(function() return 1469 -(899 + 568) ;end)();end if (v52~=(0 -0)) then else local v95=(function() return 0 -0 ;end)();local v96=(function() return;end)();while true do if (v95~=(867 -(550 + 317))) then else v96=(function() return 0;end)();while true do if (v96~=(0 -0)) then else v53=(function() return function(v131,v132,v133) local v134=(function() return 0;end)();local v135=(function() return;end)();while true do if (v134~=(0 -0)) then else v135=(function() return 0 -0 ;end)();while true do if ((290 -(60 + 230))==v135) then local v345=(function() return 285 -(134 + 151) ;end)();local v346=(function() return;end)();while true do if (v345==(1665 -(970 + 695))) then v346=(function() return 0;end)();while true do if (v346==(0 -0)) then v131[v132-#"}" ]=(function() return v133();end)();return v131,v132,v133;end end break;end end end end break;end end end;end)();v54=(function() return {};end)();v96=(function() return 812 -(569 + 242) ;end)();end if ((1991 -(582 + 1408))==v96) then v55=(function() return {};end)();v56=(function() return {};end)();v96=(function() return 1 + 1 ;end)();end if (v96~=(6 -4)) then else v52=(function() return 1 -0 ;end)();break;end end break;end end end v66=(function() return 1025 -(706 + 318) ;end)();end if (v66==(1252 -(721 + 530))) then if (v52~=2) then else v57[ #"asd"]=(function() return v21();end)();for v103= #"[",v23() do local v104=(function() return v21();end)();if (v20(v104, #",", #"[")~=0) then else local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106~=1) then else local v111=(function() return 1271 -(945 + 326) ;end)();while true do if (v111==(0 -0)) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 -0)) then local v299=(function() return 700 -(271 + 429) ;end)();local v300=(function() return;end)();while true do if (v299~=(241 -(187 + 54))) then else v300=(function() return 780 -(162 + 618) ;end)();while true do if (v300~=(1500 -(1408 + 92))) then else v109[ #"19("]=(function() return v22();end)();v109[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v107== #",") then v109[ #"xnx"]=(function() return v23();end)();elseif (v107==(2 + 0)) then v109[ #"19("]=(function() return v23() -((1088 -(461 + 625))^(11 + 5)) ;end)();elseif (v107~= #"19(") then else local v354=(function() return 1288 -(993 + 295) ;end)();local v355=(function() return;end)();while true do if (v354~=(0 + 0)) then else v355=(function() return 1171 -(418 + 753) ;end)();while true do if (v355~=0) then else v109[ #"xxx"]=(function() return v23() -((1 + 1)^(33 -17)) ;end)();v109[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v111=(function() return 1 + 0 ;end)();end if (v111~=1) then else v106=(function() return 1 + 1 ;end)();break;end end end if (2==v106) then if (v20(v108, #"/", #"}")== #",") then v109[2]=(function() return v59[v109[2 -0 ]];end)();end if (v20(v108,1 + 1 ,1638 -(1373 + 263) )~= #"!") then else v109[ #"-19"]=(function() return v59[v109[ #"-19"]];end)();end v106=(function() return 3;end)();end if (v106~=(1000 -(451 + 549))) then else local v112=(function() return 0;end)();while true do if (1~=v112) then else v106=(function() return 1;end)();break;end if ((0 + 0)==v112) then v107=(function() return v20(v104,1 + 1 , #"19(");end)();v108=(function() return v20(v104, #"?id=",9 -3 );end)();v112=(function() return 2 -1 ;end)();end end end if ((4 -1)==v106) then if (v20(v108, #"gha", #"xxx")== #"|") then v109[ #"?id="]=(function() return v59[v109[ #"asd1"]];end)();end v54[v103]=(function() return v109;end)();break;end end end end for v105= #"|",v23() do v55,v105,v28=(function() return v53(v55,v105,v28);end)();end return v57;end break;end end end end local function v29(v60,v61,v62) local v63=v60[2 -1 ];local v64=v60[(2168 -(28 + 238)) -(106 + 1794) ];local v65=v60[1 + 2 ];return function(...) local v67=v63;local v68=v64;local v69=v65;local v70=v27;local v71=(2 -1) + 0 ;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v85=0 -0 ,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + (115 -((1563 -(1381 + 178)) + 110)) ];else v77[v85]=v74[v85 + ((549 + 36) -(46 + 11 + 527)) ];end end local v78=(v75-v69) + (1428 -(41 + 1386)) ;local v79;local v80;while true do v79=v67[v71];v80=v79[104 -(17 + 86) ];if (v80<=29) then if ((568<911) and (v80<=(10 + 4))) then if (v80<=(13 -(3 + 4))) then if (v80<=(5 -(10 -7))) then if (v80<=(166 -(122 + 44))) then local v114=v79[2 -0 ];local v115=v79[4];local v116=v114 + 2 ;local v117={v77[v114](v77[v114 + 1 + 0 ],v77[v116])};for v125=1 + 0 ,v115 do v77[v116 + v125 ]=v117[v125];end local v118=v117[1 -0 ];if v118 then local v139=0;while true do if ((3285<4228) and (v139==(65 -(27 + 3 + 35)))) then v77[v116]=v118;v71=v79[3 + 0 + (0 -0) ];break;end end else v71=v71 + (1258 -(1043 + 214)) ;end elseif ((3916>3328) and (v80==1)) then v77[v79[7 -5 ]]=v77[v79[3]];else v77[v79[1214 -(323 + 889) ]]();end elseif (v80<=4) then if (v80>(7 -4)) then v77[v79[582 -(361 + 219) ]]={};else v77[v79[322 -(53 + 267) ]]=v77[v79[1 + 2 ]][v79[417 -(15 + (1554 -(1074 + 82))) ]];end elseif (v80==5) then v77[v79[2]]=v77[v79[3]][v79[986 -(18 + 964) ]];else v71=v79[11 -8 ];end elseif ((2500<3839) and (v80<=(6 + 4))) then if ((507==507) and (v80<=(6 + 2))) then if ((240<=3165) and (v80>(857 -(20 + (1818 -988))))) then v77[v79[2 + 0 ]]=v79[129 -(116 + 10) ];else local v150=0;local v151;while true do if (v150==(0 + 0)) then v151=v79[740 -(542 + 196) ];v77[v151]=v77[v151](v77[v151 + (1 -0) ]);break;end end end elseif (v80==((1787 -(214 + 1570)) + 6)) then v77[v79[2 + 0 ]]=v77[v79[2 + 1 ]];else local v154=v79[4 -2 ];v77[v154]=v77[v154](v13(v77,v154 + (2 -1) ,v72));end elseif (v80<=(1563 -(1126 + (1880 -(990 + 465))))) then if (v80>(416 -(118 + 287))) then local v156=0 -0 ;local v157;local v158;while true do if (1==v156) then v77[v157 + (1122 -(118 + 1003)) ]=v158;v77[v157]=v158[v79[(5 + 6) -(4 + 3) ]];break;end if (v156==(0 + 0)) then v157=v79[379 -(142 + 235) ];v158=v77[v79[(50 -37) -10 ]];v156=1 + 0 ;end end else local v159=v79[979 -(553 + 424) ];v77[v159](v13(v77,v159 + (1 -0) ,v79[(1729 -(1668 + 58)) + (626 -(512 + 114)) ]));end elseif (v80==((33 -20) + 0)) then v77[v79[2]]=v62[v79[3]];else local v162=v79[(3 -1) + 0 ];v77[v162]=v77[v162](v13(v77,v162 + 1 + (0 -0) ,v79[2 + 1 ]));end elseif (v80<=21) then if (v80<=(36 -19)) then if (v80<=(41 -26)) then local v119=v79[4 -2 ];local v120=v77[v119];local v121=v79[1 + 2 ];for v128=1,v121 do v120[v128]=v77[v119 + v128 ];end elseif (v80==((36 + 41) -61)) then v77[v79[755 -(239 + 97 + 417) ]]=v29(v68[v79[2 + 1 ]],nil,v62);else local v165=1329 -(797 + 532) ;local v166;local v167;local v168;local v169;while true do if ((834>=805) and (v165==(0 + 0))) then v166=v79[1 + 1 ];v167,v168=v70(v77[v166](v13(v77,v166 + (2 -1) ,v79[1205 -(373 + 829) ])));v165=732 -(476 + 255) ;end if (v165==((984 + 147) -(369 + 761))) then v72=(v168 + v166) -1 ;v169=0 + 0 ;v165=2 -0 ;end if ((v165==(3 -1)) or (3812<2316)) then for v328=v166,v72 do local v329=0;while true do if (v329==(238 -((215 -151) + 174))) then v169=v169 + 1 + 0 ;v77[v328]=v167[v169];break;end end end break;end end end elseif ((v80<=(27 -8)) or (2652<=1533)) then if (v80==(354 -(144 + 192))) then local v170=(2210 -(109 + 1885)) -((1511 -(1269 + 200)) + (333 -159)) ;local v171;local v172;local v173;while true do if (v170==1) then v173=0 + 0 ;for v330=v171,v79[4 + 0 ] do local v331=0 + 0 ;while true do if (v331==0) then v173=v173 + (1505 -(363 + 1141)) ;v77[v330]=v172[v173];break;end end end break;end if (v170==(1580 -(1183 + 397))) then v171=v79[2];v172={v77[v171](v77[v171 + 1 ])};v170=(816 -(98 + 717)) + 0 ;end end else do return;end end elseif (v80>(15 + 5)) then local v174=v79[2];local v175=v77[v174];local v176=v79[3];for v243=1,v176 do v175[v243]=v77[v174 + v243 ];end else v77[v79[(2803 -(802 + 24)) -(1913 + 62) ]][v79[2 + 1 ]]=v79[10 -6 ];end elseif (v80<=((3376 -1418) -((713 -148) + 1368))) then if ((v80<=(86 -63)) or (3598<1460)) then if ((v80==22) or (4116<1192)) then local v179=v68[v79[1664 -(1477 + 184) ]];local v180;local v181={};v180=v10({},{__index=function(v246,v247) local v248=v181[v247];return v248[1][v248[2]];end,__newindex=function(v249,v250,v251) local v252=0 -0 ;local v253;while true do if (v252==(0 + 0)) then v253=v181[v250];v253[857 -(564 + 292) ][v253[2 -0 ]]=v251;break;end end end});for v254=1,v79[4] do v71=v71 + 1 ;local v255=v67[v71];if (v255[2 -(1 + 0) ]==9) then v181[v254-(305 -(244 + 13 + 47)) ]={v77,v255[3]};else v181[v254-(1002 -(938 + (209 -146))) ]={v61,v255[1128 -(936 + 189) ]};end v76[ #v76 + 1 + 0 ]=v181;end v77[v79[2]]=v29(v179,v180,v62);else v77[v79[1615 -(1565 + 48) ]]=v79[2 + 1 ]~=(1138 -(782 + 356)) ;end elseif (v80>(291 -(176 + 91))) then local v184=v79[4 -(1 + 1) ];v77[v184]=v77[v184]();else local v186=v79[(2 + 0) -0 ];local v187=v79[1096 -(975 + 117) ];local v188=v186 + (1877 -(157 + 1718)) ;local v189={v77[v186](v77[v186 + 1 ],v77[v188])};for v257=1,v187 do v77[v188 + v257 ]=v189[v257];end local v190=v189[1 + 0 ];if v190 then v77[v188]=v190;v71=v79[10 -7 ];else v71=v71 + (3 -2) ;end end elseif (v80<=(1045 -(697 + 321))) then if ((v80>((51 + 19) -44)) or (3377<=903)) then v77[v79[3 -1 ]][v79[(3 + 3) -(1436 -(797 + 636)) ]]=v79[2 + 2 ];else v77[v79[3 -(4 -3) ]]={};end elseif (v80==(74 -46)) then local v194=(2846 -(1427 + 192)) -(322 + 905) ;local v195;while true do if (v194==(611 -(602 + 9))) then v195=v79[1191 -(449 + 740) ];v77[v195](v77[v195 + 1 ]);break;end end else local v196=872 -(826 + 46) ;local v197;while true do if ((3976>=439) and (v196==(947 -(245 + 702)))) then v197=v79[6 -4 ];v77[v197]=v77[v197]();break;end end end elseif (v80<=(15 + 29)) then if ((3752==3752) and (v80<=36)) then if (v80<=(12 + 20)) then if (v80<=30) then v77[v79[1900 -(260 + 1638) ]]=v61[v79[(1028 -585) -(382 + 58) ]];elseif ((4046>2695) and (v80>(99 -68))) then if (v77[v79[2 + 0 ]]==v79[8 -4 ]) then v71=v71 + (2 -1) ;else v71=v79[1208 -(902 + 303) ];end else v77[v79[2]]=v79[5 -2 ]~=(0 -0) ;end elseif ((v80<=(3 + 31)) or (3545==3197)) then if (v80>(1723 -(1121 + 512 + 57))) then v62[v79[217 -(22 + 192) ]]=v77[v79[685 -(483 + 200) ]];else for v260=v79[2],v79[3] do v77[v260]=nil;end end elseif ((2394>373) and (v80==(1498 -(1404 + 59)))) then local v201=v79[2];local v202={};for v262=2 -1 , #v76 do local v263=v76[v262];for v288=0 -0 , #v263 do local v289=v263[v288];local v290=v289[(348 + 418) -(468 + 297) ];local v291=v289[564 -(334 + 228) ];if ((4155<=4232) and (v290==v77) and (v291>=v201)) then v202[v291]=v290[v291];v289[1]=v202;end end end else for v264=v79[2],v79[10 -(333 -(192 + 134)) ] do v77[v264]=nil;end end elseif (v80<=(92 -52)) then if (v80<=(68 -30)) then if ((v80==(11 + (1302 -(316 + 960)))) or (3581==3473)) then do return;end else v77[v79[238 -(79 + 62 + 95) ]]=v61[v79[3 + 0 ]];end elseif (v80==39) then local v205=v79[4 -2 ];local v206,v207=v70(v77[v205](v13(v77,v205 + (2 -1) ,v79[1 + 2 ])));v72=(v207 + v205) -((2 + 0) -1) ;local v208=0 + 0 + 0 ;for v266=v205,v72 do local v267=0;while true do if (v267==((0 -0) + 0)) then v208=v208 + 1 ;v77[v266]=v206[v208];break;end end end else v77[v79[2 -0 ]]=v62[v79[3]];end elseif ((4995>3348) and (v80<=(25 + 17))) then if (v80>(204 -(92 + 71))) then local v211=v79[1 + (552 -(83 + 468)) ];local v212={v77[v211](v77[v211 + (766 -(574 + 191)) ])};local v213=0 + 0 ;for v268=v211,v79[9 -5 ] do v213=v213 + 1 + 0 ;v77[v268]=v212[v213];end else local v214=849 -(254 + 595) ;local v215;while true do if (v214==((209 -83) -(55 + 71))) then v215=v79[2 -0 ];v77[v215]=v77[v215](v13(v77,v215 + (1791 -(573 + 1217)) ,v79[8 -5 ]));break;end end end elseif (v80==((10 -6) + 39)) then local v216=0 -0 ;local v217;while true do if ((v216==0) or (754>3724)) then v217=v79[941 -(714 + 225) ];v77[v217]=v77[v217](v77[v217 + (2 -1) ]);break;end end elseif ((217>=57) and (v79[2 -0 ]==v77[v79[1 + (328 -(45 + 280)) ]])) then v71=v71 + 1 ;else v71=v79[3 -(0 + 0) ];end elseif (v80<=52) then if ((v80<=48) or (2070>=4037)) then if ((2705==2705) and (v80<=((745 + 107) -(118 + 688)))) then if (v80>(93 -(25 + 23))) then v77[v79[1 + 1 ]]=v29(v68[v79[2 + 1 ]],nil,v62);else local v219=v79[2];v77[v219](v77[v219 + (1887 -(927 + 959)) ]);end elseif ((61==61) and (v80==(158 -111))) then local v220=v79[734 -(16 + 716) ];local v221={};for v271=(1 + 0) -0 , #v76 do local v272=v76[v271];for v293=0, #v272 do local v294=v272[v293];local v295=v294[98 -(11 + 86) ];local v296=v294[2];if ((v295==v77) and (v296>=v220)) then v221[v296]=v295[v296];v294[2 -1 ]=v221;end end end else local v222=285 -(175 + 110) ;local v223;local v224;while true do if (((2 -1)==v222) or (699>=1296)) then v77[v223 + (4 -3) ]=v224;v77[v223]=v224[v79[1800 -(503 + 1293) ]];break;end if (v222==((0 + 0) -0)) then v223=v79[2 + 0 ];v224=v77[v79[3]];v222=1062 -(810 + 251) ;end end end elseif (v80<=(35 + 15)) then if (v80==(16 + 33)) then local v225=v79[2 + 0 ];v77[v225](v13(v77,v225 + (534 -(43 + 490)) ,v79[736 -(711 + 22) ]));else local v226=v79[7 -5 ];v77[v226]=v77[v226](v13(v77,v226 + (860 -(240 + 619)) ,v72));end elseif (v80>(13 + (69 -31))) then v77[v79[2]]();else v77[v79[2 -0 ]][v79[1 + 2 ]]=v77[v79[(3659 -(340 + 1571)) -(1344 + 400) ]];end elseif (v80<=(461 -(255 + 150))) then if (v80<=54) then if (v80==(42 + 11)) then v62[v79[3]]=v77[v79[2 + 0 ]];else local v232=v79[8 -6 ];local v233=v77[v232];for v273=v232 + (3 -2) ,v79[1742 -(404 + 1335) ] do v7(v233,v77[v273]);end end elseif ((v80>((182 + 279) -(183 + 223))) or (1783>=3616)) then v71=v79[3 -(1772 -(1733 + 39)) ];elseif (v77[v79[(5 -3) + 0 ]]==v79[2 + 2 ]) then v71=v71 + (338 -(10 + 327)) ;else v71=v79[3 + 0 ];end elseif (v80<=(396 -(118 + 220))) then if (v80==57) then v77[v79[(1035 -(125 + 909)) + 1 ]]=v79[452 -(108 + 341) ];else local v237=v68[v79[2 + 1 ]];local v238;local v239={};v238=v10({},{__index=function(v274,v275) local v276=v239[v275];return v276[4 -3 ][v276[1495 -(711 + 782) ]];end,__newindex=function(v277,v278,v279) local v280=0 -0 ;local v281;while true do if (v280==0) then v281=v239[v278];v281[470 -(270 + 199) ][v281[1 + 1 ]]=v279;break;end end end});for v282=1820 -(580 + 1239) ,v79[11 -7 ] do v71=v71 + 1 + 0 ;local v283=v67[v71];if (v283[1]==9) then v239[v282-1 ]={v77,v283[7 -4 ]};else v239[v282-(1 + 0) ]={v61,v283[3 + 0 ]};end v76[ #v76 + 1 ]=v239;end v77[v79[2]]=v29(v237,v238,v62);end elseif ((v80>((127 + 154) -222)) or (3913>4527)) then v77[v79[5 -3 ]][v79[1839 -(1045 + 791) ]]=v77[v79[4]];elseif ((4376>817) and (v79[2]==v77[v79[9 -5 ]])) then v71=v71 + (1 -0) ;else v71=v79[508 -((500 -149) + 154) ];end v71=v71 + (1575 -(1281 + 293)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
