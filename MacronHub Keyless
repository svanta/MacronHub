--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v85=0;while true do if (v85==0) then v19=v0(v3(v30,1,1));return "";end end else local v86=v2(v0(v30,16));if v19 then local v117=0;local v118;while true do if (v117==1) then return v118;end if (v117==0) then v118=v5(v86,v19);v19=nil;v117=1;end end else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + ((1328 -396) -((1922 -(68 + 997)) + 74)))) ;return v87-(v87%(569 -(367 + 201))) ;else local v88=927 -(214 + 713) ;local v89;while true do if (v88==(0 + 0)) then v89=(1 + 1)^(v32-1) ;return (((v31%(v89 + v89))>=v89) and (878 -(282 + 595))) or (1637 -((2793 -(226 + 1044)) + 103 + 11)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (8 -6) );v18=v18 + (119 -(32 + 85)) ;return (v36 * (251 + 5)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + 65)) ;return (v40 * 16777216) + (v39 * (156337 -90801)) + (v38 * 256) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,1 -(1486 -(998 + 488)) ,36 -16 ) * (((112 + 240) -(87 + 263))^(212 -(67 + 113)))) + v41 ;local v45=v20(v42,16 + 5 ,31);local v46=((v20(v42,69 -(475 -(145 + 293)) )==(2 -1)) and  -(1 -0)) or ((431 -(44 + 386)) + 0) ;if (v45==(0 + 0)) then if (v44==(0 -0)) then return v46 * (952 -(802 + 150)) ;else v45=792 -(368 + 423) ;v43=0 -0 ;end elseif (v45==(2065 -(10 + 8))) then return ((v44==((772 -(201 + 571)) -(1138 -(116 + 1022)))) and (v46 * ((1 + (0 -0))/(997 -(915 + 82))))) or (v46 * NaN) ;end return v8(v46,v45-(2896 -1873) ) * (v43 + (v44/((1 + 1)^(31 + 13 + 8)))) ;end local function v25(v47) local v48;if  not v47 then local v90=0 -(0 + 0) ;while true do if (v90==0) then v47=v23();if (v47==(859 -(814 + 45))) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -(2 -1) );v18=v18 + v47 ;local v49={};for v66=3 -2 , #v48 do v49[v66]=v2(v1(v3(v48,v66,v66)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0 -0 ;end)();local v92=(function() return;end)();local v94=(function() return;end)();while true do if (v91==0) then local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if (v123~=(1000 -(451 + 549))) then else v124=(function() return 0;end)();while true do if ((0 + 0)~=v124) then else v92=(function() return v93();end)();v94=(function() return nil;end)();v124=(function() return 1 + 0 ;end)();end if (v124~=1) then else v91=(function() return  #"!";end)();break;end end break;end end end if (v91== #",") then if (v92== #"~") then v94=(function() return v93()~=0 ;end)();elseif (v92==(1 + 1)) then v94=(function() return v95();end)();elseif (v92== #"-19") then v94=(function() return v96();end)();end v97[v98]=(function() return v94;end)();break;end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v51=(function() return function(v99,v100,v101,v102,v103,v104,v105,v106,v107) local v108=(function() return 0 -0 ;end)();local v99=(function() return;end)();local v100=(function() return;end)();while true do local v116=(function() return 0;end)();while true do if ((0 -0)~=v116) then else if (v108~=(1770 -(1749 + 20))) then else local v128=(function() return 0;end)();while true do if (v128~=0) then else local v132=(function() return 1384 -(746 + 638) ;end)();while true do if ((1322 -(1249 + 73))~=v132) then else while true do if (v99==(0 + 0)) then v100=(function() return v101();end)();if (v102(v100, #"~", #".")~=(0 -0)) then else local v256=(function() return 341 -(218 + 123) ;end)();local v257=(function() return;end)();local v258=(function() return;end)();local v259=(function() return;end)();local v260=(function() return;end)();while true do if (v256==(0 -0)) then v257=(function() return 0 -0 ;end)();v258=(function() return nil;end)();v256=(function() return 1;end)();end if (v256~=(1582 -(1535 + 46))) then else local v289=(function() return 0 + 0 ;end)();while true do if (1==v289) then v256=(function() return 1 + 1 ;end)();break;end if (v289==0) then local v292=(function() return 0;end)();while true do if ((560 -(306 + 254))~=v292) then else v259=(function() return nil;end)();v260=(function() return nil;end)();v292=(function() return 1 + 0 ;end)();end if (v292==(2 -1)) then v289=(function() return 1;end)();break;end end end end end if (v256==(3 -1)) then while true do if (v257~= #"~") then else local v293=(function() return 1467 -(899 + 568) ;end)();local v294=(function() return;end)();while true do if ((0 + 0)==v293) then v294=(function() return 0 -0 ;end)();while true do if (v294==0) then v260=(function() return {v103(),v103(),nil,nil};end)();if (v258==0) then local v300=(function() return 603 -(268 + 335) ;end)();local v301=(function() return;end)();while true do if ((290 -(60 + 230))~=v300) then else v301=(function() return 1427 -(41 + 1386) ;end)();while true do if (v301~=(103 -(17 + 86))) then else v260[ #"asd"]=(function() return v103();end)();v260[ #"asd1"]=(function() return v103();end)();break;end end break;end end elseif (v258== #",") then v260[ #"91("]=(function() return v104();end)();elseif (v258==(2 + 0)) then v260[ #"19("]=(function() return v104() -((574 -(426 + 146))^(2 + 14)) ;end)();elseif (v258== #"xxx") then local v308=(function() return 0;end)();while true do if (v308==(0 -0)) then v260[ #"xnx"]=(function() return v104() -((168 -(122 + 44))^16) ;end)();v260[ #"0313"]=(function() return v103();end)();break;end end end v294=(function() return 1;end)();end if (v294~=(1 -0)) then else v257=(function() return 1458 -(282 + 1174) ;end)();break;end end break;end end end if (v257== #"19(") then if (v102(v259, #"19(", #"-19")== #",") then v260[ #"xnxx"]=(function() return v105[v260[ #"0836"]];end)();end v106[v107]=(function() return v260;end)();break;end if (v257~=(813 -(569 + 242))) then else local v296=(function() return 0 + 0 ;end)();local v297=(function() return;end)();while true do if (v296==0) then v297=(function() return 0 -0 ;end)();while true do if (v297~=(0 + 0)) then else if (v102(v259, #"]", #",")== #">") then v260[1 + 1 ]=(function() return v105[v260[3 -1 ]];end)();end if (v102(v259,1026 -(706 + 318) ,1253 -(721 + 530) )~= #"/") then else v260[ #"19("]=(function() return v105[v260[ #"xxx"]];end)();end v297=(function() return 1 + 0 ;end)();end if (v297~=(1272 -(945 + 326))) then else v257=(function() return  #"gha";end)();break;end end break;end end end if (v257~=0) then else local v298=(function() return 0;end)();while true do if (v298~=(1258 -(1043 + 214))) then else v257=(function() return  #":";end)();break;end if (v298==(0 -0)) then v258=(function() return v102(v100,2 + 0 , #"-19");end)();v259=(function() return v102(v100, #"0313",6);end)();v298=(function() return 3 -2 ;end)();end end end end break;end end end break;end end return v99,v100,v101,v102,v103,v104,v105,v106,v107;end end end end end if (v108~=0) then else local v129=(function() return 1212 -(323 + 889) ;end)();local v130=(function() return;end)();while true do if (v129~=0) then else v130=(function() return 0;end)();while true do if (v130~=0) then else v99=(function() return 0 -0 ;end)();v100=(function() return nil;end)();v130=(function() return 701 -(271 + 429) ;end)();end if (v130==(321 -(53 + 267))) then v108=(function() return 1 + 0 ;end)();break;end end break;end end end break;end end end end;end)();local v52=(function() return function(v109,v110,v111) local v112=(function() return 0;end)();local v113=(function() return;end)();while true do if (v112==0) then v113=(function() return 0;end)();while true do if ((413 -(15 + 398))~=v113) then else local v131=(function() return 1500 -(1408 + 92) ;end)();while true do if (v131~=(1086 -(461 + 625))) then else local v133=(function() return 1288 -(993 + 295) ;end)();while true do if (v133==(0 + 0)) then v109[v110-#" " ]=(function() return v111();end)();return v109,v110,v111;end end end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"|",v57 do FlatIdent_12703,Type,v21,Cons,v24,v25,v58,v68=(function() return v50(FlatIdent_12703,Type,v21,Cons,v24,v25,v58,v68);end)();end v56[ #"91("]=(function() return v21();end)();for v69= #"<",v23() do FlatIdent_475BC,Descriptor,v21,v20,v22,v23,v58,v53,v69=(function() return v51(FlatIdent_475BC,Descriptor,v21,v20,v22,v23,v58,v53,v69);end)();end for v70= #" ",v23() do v54,v70,v28=(function() return v52(v54,v70,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[(860 -(240 + 619)) + 0 ];local v64=v60[852 -(20 + 830) ];local v65=v60[1 + 2 + 0 ];return function(...) local v71=v63;local v72=v64;local v73=v65;local v74=v27;local v75=127 -(116 + (15 -5)) ;local v76= -(1 + 0);local v77={};local v78={...};local v79=v12("#",...) -(1 -(0 + 0)) ;local v80={};local v81={};for v114=0,v79 do if ((1358==1358) and (v114>=v73)) then v77[v114-v73 ]=v78[v114 + 1 ];else v81[v114]=v78[v114 + 1 + 0 ];end end local v82=(v79-v73) + 1 + 0 ;local v83;local v84;while true do local v115=0 + 0 ;while true do if ((2 -(1745 -(1344 + 400)))==v115) then if ((2017<4261) and (v84<=23)) then if (v84<=(28 -(422 -(255 + 150)))) then if (v84<=(1556 -(1126 + 425))) then if (v84<=2) then if ((4716>80) and (v84<=0)) then local v135=v83[407 -(118 + 227 + 60) ];v81[v135]=v81[v135](v13(v81,v135 + (3 -2) ,v76));elseif ((v84>(1122 -(118 + 1003))) or (3507==3272)) then local v166=v83[5 -(2 + 1) ];local v167=v83[381 -(142 + (1004 -769)) ];local v168=v166 + (9 -7) ;local v169={v81[v166](v81[v166 + 1 + 0 ],v81[v168])};for v233=978 -(553 + 424) ,v167 do v81[v168 + v233 ]=v169[v233];end local v170=v169[1 -(1739 -(404 + 1335)) ];if v170 then v81[v168]=v170;v75=v83[3];else v75=v75 + 1 + 0 ;end else v81[v83[2]]=v83[3]~=(0 + 0) ;end elseif (v84<=((408 -(183 + 223)) + 1)) then v81[v83[1 + 1 ]]=v29(v72[v83[2 + 1 ]],nil,v62);elseif (v84==((9 -1) -4)) then v81[v83[2]]=v83[7 -4 ];else v81[v83[2]]=v81[v83[6 -(2 + 1) ]][v83[4]];end elseif (v84<=(3 + 5)) then if ((v84<=(28 -22)) or (2824>=3271)) then v81[v83[755 -(239 + 514) ]][v83[2 + 1 ]]=v83[1333 -(797 + 532) ];elseif (v84>(6 + 1)) then local v176=v83[1 + 1 ];local v177=v81[v83[6 -3 ]];v81[v176 + (1203 -(135 + 238 + 829)) ]=v177;v81[v176]=v177[v83[735 -(476 + 255) ]];else v81[v83[1132 -(369 + 761) ]][v83[3]]=v83[4];end elseif (((4082<4917) and (v84<=9)) or (876>=3075)) then v81[v83[(339 -(10 + 327)) + 0 ]]=v81[v83[5 -2 ]][v83[7 -3 ]];elseif (v84==10) then v81[v83[240 -(64 + 174) ]]=v62[v83[1 + 2 ]];else v75=v83[3 -0 ];end elseif (v84<=17) then if (v84<=(350 -(144 + 192))) then if (v84<=((159 + 69) -(42 + 174))) then local v142=0 + 0 ;local v143;local v144;local v145;while true do if (v142==(0 + (338 -(118 + 220)))) then v143=v83[2];v144=v81[v143];v142=1 + 0 ;end if (v142==1) then v145=v83[3];for v263=1,v145 do v144[v263]=v81[v143 + v263 ];end break;end end elseif (v84==(1517 -(121 + 242 + 1141))) then v75=v83[1583 -(1183 + 397) ];else local v187=v83[5 -3 ];v81[v187](v13(v81,v187 + 1 + 0 ,v83[3]));end elseif (v84<=15) then v81[v83[2 + 0 ]]();elseif (v84==(1991 -(1913 + 62))) then v81[v83[2 + 0 ]]();else local v188=0;local v189;local v190;local v191;while true do if ((4832>=1386) and (v188==((451 -(108 + 341)) -(1 + 0)))) then v191=1933 -(565 + 1368) ;for v282=v189,v83[15 -11 ] do local v283=0;while true do if ((4352>2554) and (v283==(1661 -(1477 + 184)))) then v191=v191 + (4 -3) ;v81[v282]=v190[v191];break;end end end break;end if ((v188==(0 -0)) or (4406<4043)) then v189=v83[2 + 0 ];v190={v81[v189](v81[v189 + (857 -(564 + 292)) ])};v188=1 -0 ;end end end elseif (((137==137) and (v84<=(60 -40))) or (1889>=3383)) then if (v84<=((616 -294) -(244 + 60))) then local v146=v83[2 + 0 ];v81[v146](v81[v146 + 1 ]);elseif ((1892<=2734) and (v84>(495 -(41 + 435)))) then local v192=1001 -(938 + 63) ;local v193;local v194;while true do if ((1923<2218) and (v192==(1 + 0))) then for v284=v193 + (1126 -((1405 -(270 + 199)) + 189)) ,v83[1 + 2 ] do v7(v194,v81[v284]);end break;end if (v192==0) then v193=v83[1615 -(508 + 1057 + 48) ];v194=v81[v193];v192=1 + 0 ;end end else local v195=(2957 -(580 + 1239)) -(782 + 356) ;local v196;while true do if ((267 -(176 + 91))==v195) then v196=v83[4 -2 ];v81[v196]=v81[v196]();break;end end end elseif ((2173>379) and (v84<=((89 -59) -9))) then local v147=0 + 0 ;local v148;while true do if ((1092 -(975 + 117))==v147) then v148=v83[1877 -(157 + 1718) ];v81[v148](v81[v148 + 1 + 0 ]);break;end end elseif ((v84==(77 -55)) or (1570>=4332)) then do return;end else v81[v83[6 -(1 + 3) ]]={};end elseif (v84<=35) then if ((v84<=((457 + 590) -(697 + 321))) or (2591==3409)) then if ((4514>3324) and (v84<=(70 -44))) then if (v84<=(62 -38)) then v81[v83[3 -1 ]]=v62[v83[6 -(2 + 1) ]];elseif (v84>(10 + 15)) then v81[v83[3 -1 ]]=v83[3];else local v200=v83[5 -(1170 -(645 + 522)) ];local v201=v81[v200];local v202=v83[1230 -(322 + 905) ];for v240=(2402 -(1010 + 780)) -(602 + 9) ,v202 do v201[v240]=v81[v200 + v240 ];end end elseif ((v84<=(1216 -(449 + 740))) or (4064<=1819)) then local v151=v83[874 -(826 + 46) ];v81[v151]=v81[v151](v81[v151 + 1 ]);elseif (v84==(975 -(245 + 702))) then local v203=v83[2];local v204={v81[v203](v81[v203 + 1 + 0 ])};local v205=0;for v243=v203,v83[1902 -((1238 -978) + 1638) ] do local v244=440 -(382 + 58) ;while true do if ((v244==0) or (4986<1574) or (208>=4828)) then v205=v205 + 1 ;v81[v243]=v204[v205];break;end end end else local v206=v83[6 -4 ];local v207,v208=v74(v81[v206](v13(v81,v206 + 1 ,v83[3 + 0 ])));v76=(v208 + v206) -1 ;local v209=0 -0 ;for v245=v206,v76 do local v246=0;while true do if ((4426>172) and (v246==(0 -0))) then v209=v209 + ((3534 -2328) -(902 + 303)) ;v81[v245]=v207[v209];break;end end end end elseif (v84<=(69 -37)) then if (v84<=(72 -42)) then local v153=v83[1 + 1 ];v81[v153]=v81[v153]();elseif (v84>((3557 -(1045 + 791)) -(1121 + 569))) then v81[v83[216 -(22 + 192) ]]=v83[3]~=(683 -(483 + 200)) ;else v81[v83[2]][v83[1466 -(1404 + 59) ]]=v81[v83[4]];end elseif ((v84<=(90 -57)) or (1583>3567)) then local v155=v83[2 -0 ];local v156,v157=v74(v81[v155](v13(v81,v155 + (766 -(468 + 297)) ,v83[565 -(334 + (576 -348)) ])));v76=(v157 + v155) -(3 -2) ;local v158=0;for v164=v155,v76 do local v165=(0 -0) -0 ;while true do if (v165==(0 -0)) then v158=v158 + 1 + 0 ;v81[v164]=v156[v158];break;end end end elseif ((586>455) and (v84==(270 -((646 -(351 + 154)) + 95)))) then local v213=0 + (1574 -(1281 + 293)) ;local v214;local v215;while true do if (v213==1) then v81[v214 + (2 -1) ]=v215;v81[v214]=v215[v83[9 -5 ]];break;end if (v213==((266 -(28 + 238)) + (0 -0))) then v214=v83[5 -3 ];v215=v81[v83[3 + 0 ]];v213=1 + 0 ;end end else local v216=(1559 -(1381 + 178)) -0 ;local v217;while true do if ((0 + 0)==v216) then v217=v83[2 + 0 ];v81[v217]=v81[v217](v13(v81,v217 + 1 + 0 ,v83[166 -(92 + 71) ]));break;end end end elseif (v84<=(9 + 12 + 20)) then if (v84<=(63 -25)) then if (v84<=36) then local v159=0;local v160;while true do if (v159==0) then v160=v83[767 -(574 + 191) ];v81[v160]=v81[v160](v13(v81,v160 + 1 + 0 ,v76));break;end end elseif (v84==(92 -55)) then local v218=v83[2 + 0 ];v81[v218]=v81[v218](v13(v81,v218 + (850 -((875 -621) + 595)) ,v83[129 -(55 + 71) ]));else for v249=v83[2 -0 ],v83[2 + 1 ] do v81[v249]=nil;end end elseif (v84<=(1829 -(573 + 1217))) then local v161=v83[5 -3 ];v81[v161]=v81[v161](v81[v161 + 1 + 0 ]);elseif (v84>(64 -24)) then local v220=v83[941 -(714 + 225) ];v81[v220](v13(v81,v220 + 1 ,v83[3]));else local v221=v83[5 -3 ];local v222=v83[5 -1 ];local v223=v221 + 1 + 1 ;local v224={v81[v221](v81[v221 + 1 ],v81[v223])};for v251=807 -(118 + 688) ,v222 do v81[v223 + v251 ]=v224[v251];end local v225=v224[49 -(23 + 2 + 23) ];if (v225 or (1313==794)) then v81[v223]=v225;v75=v83[3];else v75=v75 + 1 + 0 ;end end elseif ((3174>2902) and (v84<=(1930 -(927 + 649 + 310)))) then if (v84<=(141 -99)) then v81[v83[734 -((27 -11) + 716) ]]=v29(v72[v83[3]],nil,v62);elseif ((4120<=4260) and (v84>(82 -39))) then v81[v83[99 -(11 + (1242 -(1074 + 82))) ]]={};else for v254=v83[4 -2 ],v83[288 -(175 + 110) ] do v81[v254]=nil;end end elseif ((826==826) and (v84<=(115 -69))) then if ((v84>(221 -176)) or (4019>4441)) then do return;end else v81[v83[(3940 -2142) -(503 + 1293) ]]=v81[v83[3]];end elseif (v84>(131 -84)) then v81[v83[2 + 0 ]]=v81[v83[1064 -(810 + 251) ]];else v81[v83[2 + 0 ]][v83[1 + 2 ]]=v81[v83[4 + 0 ]];end v75=v75 + (534 -(43 + 490)) ;break;end if ((v115==0) or (883>4778)) then v83=v71[v75];v84=v83[734 -(711 + 22) ];v115=3 -2 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
