--[[
 __    __  ______  ______  ______  ______  __   __    
/\ "-./  \/\  __ \/\  ___\/\  == \/\  __ \/\ "-.\ \   
\ \ \-./\ \ \  __ \ \ \___\ \  __<\ \ \/\ \ \ \-.  \  
 \ \_\ \ \_\ \_\ \_\ \_____\ \_\ \_\ \_____\ \_\\"\_\ 
  \/_/  \/_/\/_/\/_/\/_____/\/_/ /_/\/_____/\/_/ \/_/
      Welcome to Macron  ~  Obfuscated by Ferib 
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v79=0;while true do if (v79==0) then v19=v0(v3(v30,1,1));return "";end end else local v80=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==0) then v90=v5(v80,v19);v19=nil;v89=1;end if (v89==1) then return v90;end end else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=0 -0 ;local v82;while true do if (v81==(0 -(1637 -(1523 + 114)))) then v82=(v31/((3 -1)^(v32-1)))%((4 -(2 + 0))^(((v33-((883 -263) -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -((1432 -(68 + 997)) + 201)))) ;return v82-(v82%(928 -(214 + 713))) ;end end else local v83=2^(v32-(1 + 0)) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (877 -(282 + (1865 -(226 + 1044)))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0;local v36;local v37;while true do if (v35==((6 -2) -3)) then return (v37 * (373 -(32 + 85))) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;v35=2 -1 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (7 -(7 -4)) ;return (v41 * (16777566 -(87 + 263))) + (v40 * (65716 -(67 + 113))) + (v39 * (188 + 68)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,3 -2 ,20) * ((954 -(802 + 150))^((266 -181) -53))) + v42 ;local v46=v20(v43,21,55 -24 );local v47=((v20(v43,32)==(1 + 0)) and  -(998 -(915 + 82))) or (2 -1) ;if (v46==(0 + 0)) then if (v45==0) then return v47 * 0 ;else v46=1 -0 ;v44=1187 -(1069 + 118) ;end elseif (v46==(4643 -2596)) then return ((v45==((18 -(10 + 8)) -0)) and (v47 * ((1 + 0)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1015 + 8) ) * (v44 + (v45/(2^(843 -((1415 -1047) + (865 -(416 + 26))))))) ;end local function v25(v48) local v49=0 -0 ;local v50;local v51;while true do if ((1 + 1)==v49) then v51={};for v91=1 -0 , #v50 do v51[v91]=v2(v1(v3(v50,v91,v91)));end v49=(1835 -1394) -(145 + 293) ;end if (v49==(431 -(44 + 386))) then v50=v3(v16,v18,(v18 + v48) -(1487 -(998 + 488)) );v18=v18 + v48 ;v49=1 + 1 ;end if (v49==3) then return v6(v51);end if (v49==(0 + 0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==(772 -(201 + 571))) then return "";end end v49=1139 -(116 + 1022) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 1262 -(1091 + 171) ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if (v52==(1 + 1)) then for v93= #"[",v23() do local v94=(function() return v21();end)();if (v20(v94, #"<", #"~")==(0 -0)) then local v103=(function() return 0;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();while true do if (v103==(286 -(134 + 151))) then local v107=(function() return 0 -0 ;end)();while true do if (v107==(3 -2)) then v103=(function() return 2;end)();break;end if (v107~=(374 -(123 + 251))) then else v106=(function() return {v22(),v22(),nil,nil};end)();if (v104==0) then local v121=(function() return 0 -0 ;end)();local v122=(function() return;end)();while true do if ((0 -0)==v121) then v122=(function() return 698 -(208 + 490) ;end)();while true do if (v122==(0 + 0)) then v106[ #"asd"]=(function() return v22();end)();v106[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v104== #"|") then v106[ #"91("]=(function() return v23();end)();elseif (v104==(6 -4)) then v106[ #"gha"]=(function() return v23() -((1 + 1)^16) ;end)();elseif (v104== #"91(") then local v252=(function() return 0 -0 ;end)();local v253=(function() return;end)();while true do if ((836 -(660 + 176))==v252) then v253=(function() return 0 -0 ;end)();while true do if (v253==(1824 -(1195 + 629))) then v106[ #"91("]=(function() return v23() -((1 + 1)^(257 -(187 + 54))) ;end)();v106[ #"?id="]=(function() return v22();end)();break;end end break;end end end v107=(function() return 203 -(14 + 188) ;end)();end end end if (v103~=0) then else local v108=(function() return 780 -(162 + 618) ;end)();while true do if (v108==(675 -(534 + 141))) then v104=(function() return v20(v94,2, #"-19");end)();v105=(function() return v20(v94, #"0836",4 + 2 );end)();v108=(function() return 1;end)();end if ((1 + 0)==v108) then v103=(function() return 1 + 0 ;end)();break;end end end if (v103==(4 -1)) then if (v20(v105, #"-19", #"asd")~= #".") then else v106[ #".dev"]=(function() return v58[v106[ #".dev"]];end)();end v53[v93]=(function() return v106;end)();break;end if (v103==2) then if (v20(v105, #"|", #"\\")== #"\\") then v106[2]=(function() return v58[v106[2]];end)();end if (v20(v105,1 + 1 ,2)~= #"!") then else v106[ #"xxx"]=(function() return v58[v106[ #"asd"]];end)();end v103=(function() return 1639 -(1373 + 263) ;end)();end end end end for v95= #">",v23() do v54[v95-#"|" ]=(function() return v28();end)();end return v56;end if ( #"~"~=v52) then else local v86=(function() return 0;end)();local v87=(function() return;end)();while true do if (v86~=(1000 -(451 + 549))) then else v87=(function() return 0;end)();while true do if (v87==(1 + 1)) then v52=(function() return 2 -0 ;end)();break;end if (v87~=(0 + 0)) then else v57=(function() return v23();end)();v58=(function() return {};end)();v87=(function() return 1 -0 ;end)();end if ((1 -0)~=v87) then else for v111= #"[",v57 do local v112=(function() return 0 -0 ;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if ((1 + 0)~=v112) then else if (v113== #",") then v114=(function() return v21()~=(0 -0) ;end)();elseif (v113==2) then v114=(function() return v24();end)();elseif (v113~= #"91(") then else v114=(function() return v25();end)();end v58[v111]=(function() return v114;end)();break;end if (v112==(341 -(218 + 123))) then local v119=(function() return 1581 -(1535 + 46) ;end)();local v120=(function() return;end)();while true do if (v119~=(0 + 0)) then else v120=(function() return 0;end)();while true do if (v120~=(397 -(115 + 281))) then else v112=(function() return 2 -1 ;end)();break;end if (v120~=(0 + 0)) then else v113=(function() return v21();end)();v114=(function() return nil;end)();v120=(function() return 1;end)();end end break;end end end end end v56[ #"19("]=(function() return v21();end)();v87=(function() return 2 + 0 ;end)();end end break;end end end if (v52==(0 -0)) then local v88=(function() return 0 -0 ;end)();while true do if (v88==2) then v52=(function() return  #"}";end)();break;end if (v88==(1 + 0)) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v88=(function() return 869 -(550 + 317) ;end)();end if (v88==0) then v53=(function() return {};end)();v54=(function() return {};end)();v88=(function() return 1 -0 ;end)();end end end end end local function v29(v59,v60,v61) local v62=v59[2 -1 ];local v63=v59[292 -(60 + 230) ];local v64=v59[(772 -197) -(426 + 146) ];return function(...) local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=1 + 0 ;local v70= -(1457 -((1047 -(468 + 297)) + 1174));local v71={};local v72={...};local v73=v12("#",...) -1 ;local v74={};local v75={};for v84=(562 -(334 + 228)) -0 ,v73 do if (v84>=v67) then v71[v84-v67 ]=v72[v84 + 1 ];else v75[v84]=v72[v84 + 1 + (0 -0) ];end end local v76=(v73-v67) + (1025 -(706 + 318)) ;local v77;local v78;while true do local v85=1251 -(721 + 530) ;while true do if ((1530<=1861) and (v85==(1272 -(945 + 326)))) then if ((v78<=(57 -34)) or (457>493)) then if (v78<=(10 + 1)) then if ((v78<=(705 -(271 + 429))) or (3927==1413)) then if (v78<=(2 + 0)) then if ((v78<=0) or (1154<=788)) then v69=v77[1503 -(1408 + 92) ];elseif ((733<1819) and (v78>1)) then v75[v77[1088 -(461 + 625) ]]=v61[v77[1291 -((2301 -1308) + 295) ]];else local v170=v77[1 + 1 ];v75[v170]=v75[v170]();end elseif ((v78<=(1174 -(418 + 753))) or (1643>3379)) then local v124=v77[2];local v125=v77[2 + 2 ];local v126=v124 + 2 ;local v127={v75[v124](v75[v124 + 1 ],v75[v126])};for v157=1,v125 do v75[v126 + v157 ]=v127[v157];end local v128=v127[1 + 0 ];if (v128 or (4395==4755)) then local v172=0 + 0 ;while true do if (v172==(0 + 0)) then v75[v126]=v128;v69=v77[532 -(406 + 123) ];break;end end else v69=v69 + (1770 -(1749 + 20)) ;end elseif (v78>(1 + 3)) then local v173=v77[1324 -(1249 + 73) ];local v174,v175=v68(v75[v173](v13(v75,v173 + 1 + 0 ,v77[3])));v70=(v175 + v173) -(1146 -(466 + 679)) ;local v176=0;for v236=v173,v70 do v176=v176 + (2 -(1 -0)) ;v75[v236]=v174[v176];end else v75[v77[2]]=v29(v66[v77[8 -5 ]],nil,v61);end elseif ((v78<=(1908 -(106 + 1794))) or (2803>4549)) then if (v78<=(2 + 4)) then local v129=v77[1 + 1 + 0 ];v75[v129]=v75[v129](v75[v129 + ((238 -(141 + 95)) -1) ]);elseif (v78==(18 -11)) then v75[v77[116 -(4 + 110) ]]();else for v239=v77[586 -(57 + 527) ],v77[1430 -(41 + 1386) ] do v75[v239]=nil;end end elseif ((v78<=((111 + 1) -(17 + 86))) or (220>=3022)) then local v131=v77[2 + 0 ];local v132=v75[v77[3]];v75[v131 + (1 -0) ]=v132;v75[v131]=v132[v77[4]];elseif ((2822==2822) and (v78>(28 -18))) then v75[v77[168 -(122 + 44) ]]=v77[5 -2 ];else local v180=v77[6 -4 ];v75[v180]=v75[v180](v13(v75,v180 + 1 + 0 ,v70));end elseif (v78<=(3 + 14)) then if (v78<=(27 -13)) then if (v78<=(77 -(30 + 35))) then v75[v77[(4 -2) + 0 ]]=v29(v66[v77[1260 -(1043 + 214) ]],nil,v61);elseif ((v78==((115 -67) -35)) or (3793<2369)) then v75[v77[1214 -(76 + 247 + 889) ]][v77[(19 -12) -4 ]]=v75[v77[584 -(254 + 107 + 219) ]];else local v184=v77[322 -(53 + 267) ];local v185,v186=v68(v75[v184](v13(v75,v184 + 1 + 0 ,v77[3])));v70=(v186 + v184) -1 ;local v187=413 -(15 + 398) ;for v241=v184,v70 do local v242=982 -(18 + 964) ;while true do if ((v242==(0 -0)) or (1061==1857)) then v187=v187 + 1 + 0 ;v75[v241]=v185[v187];break;end end end end elseif (v78<=(10 + 5)) then v75[v77[2]]=v77[853 -(20 + 830) ]~=(0 + 0) ;elseif ((v78>(142 -(116 + 6 + 4))) or (4084==265)) then v75[v77[2]][v77[(1 -0) + 2 ]]=v77[742 -(542 + 196) ];else local v190=v77[3 -1 ];local v191=v77[2 + 2 ];local v192=v190 + 2 ;local v193={v75[v190](v75[v190 + 1 + 0 ],v75[v192])};for v243=2 -1 ,v191 do v75[v192 + v243 ]=v193[v243];end local v194=v193[2 -1 ];if ((2760>1364) and v194) then v75[v192]=v194;v69=v77[1554 -(1126 + 425) ];else v69=v69 + (406 -(118 + 287)) ;end end elseif (((4358==4358) and (v78<=(78 -58))) or (4902<=3595)) then if ((v78<=(1139 -(118 + 1003))) or (3138<993)) then local v138=v77[2];local v139=v75[v138];local v140=v77[3];for v160=2 -1 ,v140 do v139[v160]=v75[v138 + v160 ];end elseif ((v78>(396 -(84 + 58 + 235))) or (3852==293)) then local v195=0 -0 ;local v196;while true do if ((3330>2323) and (v195==0)) then v196=v77[(164 -(92 + 71)) + 1 ];v75[v196]=v75[v196](v13(v75,v196 + 1 ,v77[980 -(553 + 424) ]));break;end end else local v197=v77[(2 + 1) -1 ];v75[v197](v13(v75,v197 + 1 + (0 -0) ,v77[3 + 0 ]));end elseif ((v78<=21) or (1559==4588)) then local v141=0;local v142;while true do if ((v141==0) or (4484==788)) then v142=v77[(767 -(574 + 191)) + 0 ];v75[v142](v13(v75,v142 + 1 ,v77[3]));break;end end elseif (v78==(10 + 12)) then local v198=0;local v199;while true do if (v198==(0 + 0)) then v199=v77[4 -2 ];v75[v199]=v75[v199](v75[v199 + (2 -1) ]);break;end end else local v200=v77[4 -2 ];v75[v200]=v75[v200]();end elseif (v78<=(11 + 24)) then if ((v78<=(140 -111)) or (3626==3989)) then if (v78<=(22 + 4)) then if ((4568>=3907) and (v78<=(777 -(239 + 514)))) then v75[v77[2]]=v61[v77[2 + 1 ]];elseif ((1246<3470) and (v78>(1354 -(797 + 532)))) then v75[v77[2 + 0 ]]=v75[v77[2 + 1 ]];else v75[v77[4 -2 ]]=v77[3];end elseif (v78<=(1229 -(373 + 829))) then local v145=731 -(476 + 255) ;local v146;while true do if (v145==(1130 -(369 + (1906 -1145)))) then v146=v77[2 + 0 ];v75[v146](v75[v146 + ((1 + 0) -0) ]);break;end end elseif ((4068>=972) and (v78>(877 -(254 + 595)))) then v75[v77[3 -1 ]]=v75[v77[129 -(55 + 71) ]][v77[242 -(64 + 174) ]];else v75[v77[1 + 1 ]]={};end elseif (v78<=(47 -(19 -4))) then if ((493<3893) and ((v78<=(366 -(144 + 192))) or (916==2671))) then local v147=v77[2];local v148={v75[v147](v75[v147 + 1 + 0 ])};local v149=0;for v163=v147,v77[4 + 0 ] do v149=v149 + 1 + 0 ;v75[v163]=v148[v149];end elseif (v78==(1535 -(363 + 1141))) then do return;end else local v209=1580 -((3276 -2093) + 397) ;local v210;while true do if (v209==(0 -0)) then v210=v77[1 + 1 + 0 ];v75[v210]=v75[v210](v13(v75,v210 + 1 + 0 ,v77[1978 -(1913 + (99 -37)) ]));break;end end end elseif ((v78<=(21 + 12)) or (1473>=3332)) then for v166=v77[(944 -(714 + 225)) -3 ],v77[1936 -(565 + 1368) ] do v75[v166]=nil;end elseif (v78>(127 -93)) then local v211=1661 -(1477 + 184) ;local v212;local v213;while true do if (((272==272) and ((0 -0)==v211)) or (4051<=1157)) then v212=v77[2 + 0 ];v213=v75[v212];v211=1;end if ((604<2881) and ((857 -(564 + 292))==v211)) then for v270=v212 + (1 -0) ,v77[8 -5 ] do v7(v213,v75[v270]);end break;end end else v75[v77[306 -(244 + (175 -115)) ]]=v77[3 + 0 ]~=(476 -(41 + 435)) ;end elseif (v78<=41) then if ((v78<=38) or (900==3377)) then if (v78<=(1037 -((1307 -369) + 63))) then v75[v77[2 + 0 ]]={};elseif ((4459>591) and (4249<=4839) and (v78>(1162 -(102 + 834 + (273 -84))))) then v69=v77[1 + 2 ];else v75[v77[2]][v77[3]]=v77[(2423 -(118 + 688)) -(1565 + 48) ];end elseif (v78<=(25 + 14)) then v75[v77[2]]();elseif ((2777<3200) and (v78==(1178 -(782 + (404 -(25 + 23)))))) then local v218=(52 + 215) -(176 + 91) ;local v219;local v220;local v221;while true do if ((95<1957) and ((2 -1)==v218)) then v221=v77[3];for v271=1 -0 ,v221 do v220[v271]=v75[v219 + v271 ];end break;end if ((3398>=2395) and (v218==(1092 -(975 + 117)))) then v219=v77[1877 -(157 + 1718) ];v220=v75[v219];v218=1 + (1886 -(927 + 959)) ;end end else v75[v77[6 -4 ]]=v75[v77[3]];end elseif ((826<1717) and (v78<=44)) then if ((1426>=1105) and (v78<=42)) then local v151=v77[6 -(13 -9) ];local v152=v75[v77[1021 -((1429 -(16 + 716)) + 321) ]];v75[v151 + (2 -(1 -0)) ]=v152;v75[v151]=v152[v77[8 -4 ]];elseif (v78==(98 -55)) then v75[v77[1 + 1 ]][v77[5 -2 ]]=v75[v77[(107 -(11 + 86)) -6 ]];else local v226=v77[1229 -(322 + 905) ];v75[v226]=v75[v226](v13(v75,v226 + 1 ,v70));end elseif (v78<=((1602 -945) -(602 + 9))) then if (v78>(1234 -(449 + 740))) then local v228=872 -(826 + 46) ;local v229;local v230;local v231;while true do if ((2754<=3379) and (v228==0)) then v229=v77[949 -((530 -(175 + 110)) + 702) ];v230={v75[v229](v75[v229 + 1 + 0 ])};v228=1;end if (v228==(1899 -(260 + 1638))) then v231=440 -(382 + 58) ;for v274=v229,v77[12 -8 ] do v231=v231 + 1 + 0 ;v75[v274]=v230[v231];end break;end end else do return;end end elseif (v78>(97 -50)) then v75[v77[5 -3 ]]=v75[v77[1208 -(902 + 303) ]][v77[8 -4 ]];else local v234=v77[4 -2 ];v75[v234](v75[v234 + 1 + 0 ]);end v69=v69 + (1691 -(1121 + 569)) ;break;end if (v85==(214 -((1818 -(503 + 1293)) + 192))) then v77=v65[v69];v78=v77[(1910 -1226) -(483 + 200) ];v85=1464 -(1404 + 43 + 16) ;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
